{
    "errors": [
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 4,
                        "offset": 94
                    },
                    "file": "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 6,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
                    "start": {
                        "col": 1,
                        "line": 6,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 23,
                        "line": 16,
                        "offset": 22
                    },
                    "file": "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
                    "start": {
                        "col": 1,
                        "line": 16,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 4,
                            "offset": 94
                        },
                        "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 6,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
                        "start": {
                            "col": 1,
                            "line": 6,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 23,
                            "line": 16,
                            "offset": 22
                        },
                        "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
                        "start": {
                            "col": 1,
                            "line": 16,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/registration/login.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% load crispy_forms_tags %}\n{% load socialaccount %}` was unexpected",
            "path": "pygoat/introduction/templates/registration/login.html",
            "spans": [
                {
                    "end": {
                        "col": 25,
                        "line": 4,
                        "offset": 112
                    },
                    "file": "pygoat/introduction/templates/registration/login.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 17,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/registration/login.html",
                    "start": {
                        "col": 1,
                        "line": 17,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 25,
                            "line": 4,
                            "offset": 112
                        },
                        "path": "pygoat/introduction/templates/registration/login.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 17,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/registration/login.html",
                        "start": {
                            "col": 1,
                            "line": 17,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/AUTH/auth_success.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 5,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 22,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
                    "start": {
                        "col": 1,
                        "line": 22,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 5,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 22,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
                        "start": {
                            "col": 1,
                            "line": 22,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/AUTH/auth_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 5,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 16,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
                    "start": {
                        "col": 1,
                        "line": 16,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 5,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 16,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
                        "start": {
                            "col": 1,
                            "line": 16,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/A9/a9_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 4,
                        "offset": 94
                    },
                    "file": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 6,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
                    "start": {
                        "col": 1,
                        "line": 6,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 30,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
                    "start": {
                        "col": 1,
                        "line": 30,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 4,
                            "offset": 94
                        },
                        "path": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 6,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
                        "start": {
                            "col": 1,
                            "line": 6,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 30,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
                        "start": {
                            "col": 1,
                            "line": 30,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 5,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 23,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
                    "start": {
                        "col": 1,
                        "line": 23,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 5,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 23,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
                        "start": {
                            "col": 1,
                            "line": 23,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 5,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 29,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
                    "start": {
                        "col": 1,
                        "line": 29,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 5,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 29,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
                        "start": {
                            "col": 1,
                            "line": 29,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 5,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 25,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
                    "start": {
                        "col": 1,
                        "line": 25,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 5,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 25,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
                        "start": {
                            "col": 1,
                            "line": 25,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/XXE/xxe_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 4,
                        "offset": 94
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 6,
                        "offset": 15
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
                    "start": {
                        "col": 1,
                        "line": 6,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 28,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
                    "start": {
                        "col": 1,
                        "line": 28,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 4,
                            "offset": 94
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 6,
                            "offset": 15
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
                        "start": {
                            "col": 1,
                            "line": 6,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 28,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
                        "start": {
                            "col": 1,
                            "line": 28,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/DataExp/data_exp.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 44,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
                    "start": {
                        "col": 1,
                        "line": 44,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 44,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
                        "start": {
                            "col": 1,
                            "line": 44,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/A10/a10.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/A10/a10.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/A10/a10.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 41,
                        "line": 4,
                        "offset": 12
                    },
                    "file": "pygoat/introduction/templates/Lab/A10/a10.html",
                    "start": {
                        "col": 29,
                        "line": 4,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/A10/a10.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 42,
                        "line": 7,
                        "offset": 12
                    },
                    "file": "pygoat/introduction/templates/Lab/A10/a10.html",
                    "start": {
                        "col": 30,
                        "line": 7,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 61,
                        "line": 9,
                        "offset": 19
                    },
                    "file": "pygoat/introduction/templates/Lab/A10/a10.html",
                    "start": {
                        "col": 42,
                        "line": 9,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/A10/a10.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 41,
                            "line": 4,
                            "offset": 12
                        },
                        "path": "pygoat/introduction/templates/Lab/A10/a10.html",
                        "start": {
                            "col": 29,
                            "line": 4,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/A10/a10.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 42,
                            "line": 7,
                            "offset": 12
                        },
                        "path": "pygoat/introduction/templates/Lab/A10/a10.html",
                        "start": {
                            "col": 30,
                            "line": 7,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 61,
                            "line": 9,
                            "offset": 19
                        },
                        "path": "pygoat/introduction/templates/Lab/A10/a10.html",
                        "start": {
                            "col": 42,
                            "line": 9,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/AUTH/auth_home.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 47,
                        "offset": 24
                    },
                    "file": "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
                    "start": {
                        "col": 1,
                        "line": 43,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 47,
                            "offset": 24
                        },
                        "path": "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
                        "start": {
                            "col": 1,
                            "line": 43,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/BrokenAccess/ba.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 62,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
                    "start": {
                        "col": 1,
                        "line": 62,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 62,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
                        "start": {
                            "col": 1,
                            "line": 62,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/sec_mis/sec_mis.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 50,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
                    "start": {
                        "col": 1,
                        "line": 50,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 50,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
                        "start": {
                            "col": 1,
                            "line": 50,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/A9/a9.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/A9/a9.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/A9/a9.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/A9/a9.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 64,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/A9/a9.html",
                    "start": {
                        "col": 1,
                        "line": 64,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/A9/a9.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/A9/a9.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 64,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/A9/a9.html",
                        "start": {
                            "col": 1,
                            "line": 64,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/CMD/cmd.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 89,
                        "line": 29,
                        "offset": 12
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 77,
                        "line": 29,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 75,
                        "line": 30,
                        "offset": 6
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 69,
                        "line": 30,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 69,
                        "line": 45,
                        "offset": 6
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 63,
                        "line": 45,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 140,
                        "line": 45,
                        "offset": 6
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 134,
                        "line": 45,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 33,
                        "line": 46,
                        "offset": 2
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 31,
                        "line": 46,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 77,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                    "start": {
                        "col": 1,
                        "line": 77,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 89,
                            "line": 29,
                            "offset": 12
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 77,
                            "line": 29,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 75,
                            "line": 30,
                            "offset": 6
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 69,
                            "line": 30,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 69,
                            "line": 45,
                            "offset": 6
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 63,
                            "line": 45,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 140,
                            "line": 45,
                            "offset": 6
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 134,
                            "line": 45,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 33,
                            "line": 46,
                            "offset": 2
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 31,
                            "line": 46,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 77,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/CMD/cmd.html",
                        "start": {
                            "col": 1,
                            "line": 77,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/SQL/sql.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/SQL/sql.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/SQL/sql.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/SQL/sql.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 84,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/SQL/sql.html",
                    "start": {
                        "col": 1,
                        "line": 84,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/SQL/sql.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/SQL/sql.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 84,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/SQL/sql.html",
                        "start": {
                            "col": 1,
                            "line": 84,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/insec_des/insec_des.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 65,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
                    "start": {
                        "col": 1,
                        "line": 65,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 65,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
                        "start": {
                            "col": 1,
                            "line": 65,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/XXE/xxe.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 73,
                        "line": 44,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 72,
                        "line": 44,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 77,
                        "line": 46,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 76,
                        "line": 46,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 112,
                        "line": 47,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 111,
                        "line": 47,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 51,
                        "line": 48,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 50,
                        "line": 48,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 58,
                        "line": 49,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 57,
                        "line": 49,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 58,
                        "line": 50,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 57,
                        "line": 50,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 73,
                        "line": 50,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 72,
                        "line": 50,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 59,
                        "line": 51,
                        "offset": 1
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 58,
                        "line": 51,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 88,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                    "start": {
                        "col": 1,
                        "line": 88,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 73,
                            "line": 44,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 72,
                            "line": 44,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 77,
                            "line": 46,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 76,
                            "line": 46,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 112,
                            "line": 47,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 111,
                            "line": 47,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 51,
                            "line": 48,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 50,
                            "line": 48,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 58,
                            "line": 49,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 57,
                            "line": 49,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 58,
                            "line": 50,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 57,
                            "line": 50,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 73,
                            "line": 50,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 72,
                            "line": 50,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 59,
                            "line": 51,
                            "offset": 1
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 58,
                            "line": 51,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 88,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/XXE/xxe.html",
                        "start": {
                            "col": 1,
                            "line": 88,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/BrokenAuth/bau.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 3,
                        "offset": 76
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 5,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
                    "start": {
                        "col": 1,
                        "line": 5,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 15,
                        "line": 102,
                        "offset": 14
                    },
                    "file": "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
                    "start": {
                        "col": 1,
                        "line": 102,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 3,
                            "offset": 76
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 5,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
                        "start": {
                            "col": 1,
                            "line": 5,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 15,
                            "line": 102,
                            "offset": 14
                        },
                        "path": "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
                        "start": {
                            "col": 1,
                            "line": 102,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/Lab/XSS/xss.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}` was unexpected",
            "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
            "spans": [
                {
                    "end": {
                        "col": 20,
                        "line": 2,
                        "offset": 58
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 1,
                        "line": 1,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 110,
                        "line": 40,
                        "offset": 2
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 108,
                        "line": 40,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 42,
                        "line": 86,
                        "offset": 9
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 33,
                        "line": 86,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 55,
                        "line": 86,
                        "offset": 6
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 49,
                        "line": 86,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 87,
                        "line": 87,
                        "offset": 39
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 48,
                        "line": 87,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 18,
                        "line": 104,
                        "offset": 12
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 6,
                        "line": 104,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 17,
                        "line": 105,
                        "offset": 5
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 12,
                        "line": 105,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 16,
                        "line": 106,
                        "offset": 7
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 9,
                        "line": 106,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 19,
                        "line": 107,
                        "offset": 9
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 10,
                        "line": 107,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 19,
                        "line": 108,
                        "offset": 9
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 10,
                        "line": 108,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 23,
                        "line": 137,
                        "offset": 22
                    },
                    "file": "pygoat/introduction/templates/Lab/XSS/xss.html",
                    "start": {
                        "col": 1,
                        "line": 137,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 20,
                            "line": 2,
                            "offset": 58
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 110,
                            "line": 40,
                            "offset": 2
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 108,
                            "line": 40,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 42,
                            "line": 86,
                            "offset": 9
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 33,
                            "line": 86,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 55,
                            "line": 86,
                            "offset": 6
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 49,
                            "line": 86,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 87,
                            "line": 87,
                            "offset": 39
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 48,
                            "line": 87,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 18,
                            "line": 104,
                            "offset": 12
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 6,
                            "line": 104,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 17,
                            "line": 105,
                            "offset": 5
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 12,
                            "line": 105,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 16,
                            "line": 106,
                            "offset": 7
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 9,
                            "line": 106,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 19,
                            "line": 107,
                            "offset": 9
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 10,
                            "line": 107,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 19,
                            "line": 108,
                            "offset": 9
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 10,
                            "line": 108,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 23,
                            "line": 137,
                            "offset": 22
                        },
                        "path": "pygoat/introduction/templates/Lab/XSS/xss.html",
                        "start": {
                            "col": 1,
                            "line": 137,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line pygoat/introduction/templates/introduction/base.html:2:\n `{% load static %}` was unexpected",
            "path": "pygoat/introduction/templates/introduction/base.html",
            "spans": [
                {
                    "end": {
                        "col": 18,
                        "line": 2,
                        "offset": 17
                    },
                    "file": "pygoat/introduction/templates/introduction/base.html",
                    "start": {
                        "col": 1,
                        "line": 2,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 67,
                        "line": 97,
                        "offset": 12
                    },
                    "file": "pygoat/introduction/templates/introduction/base.html",
                    "start": {
                        "col": 55,
                        "line": 97,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 18,
                            "line": 2,
                            "offset": 17
                        },
                        "path": "pygoat/introduction/templates/introduction/base.html",
                        "start": {
                            "col": 1,
                            "line": 2,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 67,
                            "line": 97,
                            "offset": 12
                        },
                        "path": "pygoat/introduction/templates/introduction/base.html",
                        "start": {
                            "col": 55,
                            "line": 97,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Lexical error at line pygoat_sem.json:3:\n unrecognised symbol, in token rule:\ufffd",
            "path": "pygoat_sem.json",
            "type": "Lexical error"
        }
    ],
    "interfile_languages_used": [],
    "paths": {
        "scanned": [
            ".all-contributorsrc",
            ".gitignore",
            "Dockerfile",
            "README.md",
            "docker-compose.yml",
            "gh-md-toc",
            "infrastructure/README.md",
            "infrastructure/application-load-balancer/app.py",
            "infrastructure/application-load-balancer/cdk.json",
            "infrastructure/application-load-balancer/cdk.out/LoadBalancerStack.template.json",
            "infrastructure/application-load-balancer/cdk.out/cdk.out",
            "infrastructure/application-load-balancer/cdk.out/manifest.json",
            "infrastructure/application-load-balancer/cdk.out/tree.json",
            "infrastructure/application-load-balancer/httpd.sh",
            "infrastructure/application-load-balancer/requirements.txt",
            "k8s/db-claim0-persistentvolumeclaim.yaml",
            "k8s/db-deployment.yaml",
            "k8s/migration-claim0-persistentvolumeclaim.yaml",
            "k8s/migration-deployment.yaml",
            "k8s/web-claim0-persistentvolumeclaim.yaml",
            "k8s/web-deployment.yaml",
            "k8s/web-service.yaml",
            "pygoat/Dockerfile",
            "pygoat/Procfile",
            "pygoat/Solutions/solution.md",
            "pygoat/db.sqlite3",
            "pygoat/docker-compose.yml",
            "pygoat/introduction/__init__.py",
            "pygoat/introduction/__pycache__/__init__.cpython-38.pyc",
            "pygoat/introduction/__pycache__/admin.cpython-38.pyc",
            "pygoat/introduction/__pycache__/models.cpython-38.pyc",
            "pygoat/introduction/__pycache__/urls.cpython-38.pyc",
            "pygoat/introduction/__pycache__/views.cpython-38.pyc",
            "pygoat/introduction/admin.py",
            "pygoat/introduction/apps.py",
            "pygoat/introduction/forms.py",
            "pygoat/introduction/migrations/0001_initial.py",
            "pygoat/introduction/migrations/0002_auto_20210414_1510.py",
            "pygoat/introduction/migrations/0003_password_user.py",
            "pygoat/introduction/migrations/0004_auto_20210415_1722.py",
            "pygoat/introduction/migrations/0005_auto_20210415_1748.py",
            "pygoat/introduction/migrations/0006_comments.py",
            "pygoat/introduction/migrations/0007_auto_20210418_0022.py",
            "pygoat/introduction/migrations/0008_otp.py",
            "pygoat/introduction/migrations/0009_auto_20210517_2047.py",
            "pygoat/introduction/migrations/__init__.py",
            "pygoat/introduction/migrations/__pycache__/__init__.cpython-38.pyc",
            "pygoat/introduction/models.py",
            "pygoat/introduction/static/Lab/image/xxe.jpg",
            "pygoat/introduction/static/Lab/xss.js",
            "pygoat/introduction/static/introduction/style4.css",
            "pygoat/introduction/templates/Lab/A10/a10.html",
            "pygoat/introduction/templates/Lab/A10/a10_lab.html",
            "pygoat/introduction/templates/Lab/A10/debug.log",
            "pygoat/introduction/templates/Lab/A9/a9.html",
            "pygoat/introduction/templates/Lab/A9/a9_lab.html",
            "pygoat/introduction/templates/Lab/AUTH/auth_home.html",
            "pygoat/introduction/templates/Lab/AUTH/auth_lab.html",
            "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html",
            "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html",
            "pygoat/introduction/templates/Lab/AUTH/auth_success.html",
            "pygoat/introduction/templates/Lab/BrokenAccess/ba.html",
            "pygoat/introduction/templates/Lab/BrokenAccess/ba_lab.html",
            "pygoat/introduction/templates/Lab/BrokenAuth/bau.html",
            "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html",
            "pygoat/introduction/templates/Lab/BrokenAuth/otp.html",
            "pygoat/introduction/templates/Lab/CMD/cmd.html",
            "pygoat/introduction/templates/Lab/CMD/cmd_lab.html",
            "pygoat/introduction/templates/Lab/DataExp/data_exp.html",
            "pygoat/introduction/templates/Lab/DataExp/data_exp_lab.html",
            "pygoat/introduction/templates/Lab/DataExp/robots.txt",
            "pygoat/introduction/templates/Lab/SQL/sql.html",
            "pygoat/introduction/templates/Lab/SQL/sql_lab.html",
            "pygoat/introduction/templates/Lab/XSS/xss.html",
            "pygoat/introduction/templates/Lab/XSS/xss_lab.html",
            "pygoat/introduction/templates/Lab/XXE/xxe.html",
            "pygoat/introduction/templates/Lab/XXE/xxe_lab.html",
            "pygoat/introduction/templates/Lab/insec_des/insec_des.html",
            "pygoat/introduction/templates/Lab/insec_des/insec_des_lab.html",
            "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html",
            "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html",
            "pygoat/introduction/templates/introduction/base.html",
            "pygoat/introduction/templates/introduction/home.html",
            "pygoat/introduction/templates/registration/login.html",
            "pygoat/introduction/templates/registration/logout.html",
            "pygoat/introduction/templates/registration/register.html",
            "pygoat/introduction/tests.py",
            "pygoat/introduction/urls.py",
            "pygoat/introduction/views.py",
            "pygoat/introduction/xee_see.txt",
            "pygoat/manage.py",
            "pygoat/pygoat/__init__.py",
            "pygoat/pygoat/__pycache__/__init__.cpython-38.pyc",
            "pygoat/pygoat/__pycache__/settings.cpython-38.pyc",
            "pygoat/pygoat/__pycache__/urls.cpython-38.pyc",
            "pygoat/pygoat/__pycache__/wsgi.cpython-38.pyc",
            "pygoat/pygoat/asgi.py",
            "pygoat/pygoat/settings.py",
            "pygoat/pygoat/urls.py",
            "pygoat/pygoat/wsgi.py",
            "pygoat/requirements.txt",
            "pygoat/runtime.txt",
            "pygoat_sem.json",
            "requirements.txt"
        ]
    },
    "results": [
        {
            "check_id": "dockerfile.security.missing-user.missing-user",
            "end": {
                "col": 67,
                "line": 19,
                "offset": 351
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "e9ddf8c867bd95d1550d5eb723f9ddc3c0eac7dc278d062eb2c9717dc77ec1bbdcb174c6f04f4bbd2ed0e8aa7ec2ad6a66697ae6d151875a66503411b9fccacf_0",
                "fix": "USER non-root\nCMD [\"python3\", \"pygoat/manage.py\" ,\"runserver\", \"127.0.0.1:8000\"]",
                "is_ignored": false,
                "lines": "CMD [\"python3\", \"pygoat/manage.py\" ,\"runserver\", \"127.0.0.1:8000\"]",
                "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-269: Improper Privilege Management"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A04:2021 - Insecure Design"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A04_2021-Insecure_Design"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 20148,
                            "rule_id": "AbUN06",
                            "rule_name": "dockerfile.security.missing-user.missing-user",
                            "rv_id": 833486,
                            "url": "https://semgrep.dev/playground/r/nWTy4lK/dockerfile.security.missing-user.missing-user",
                            "version_id": "nWTy4lK"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
                    "shortlink": "https://sg.run/Gbvn",
                    "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "dockerfile"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$...VARS": {
                        "abstract_content": "[\"python3\"\"pygoat/manage.py\"\"runserver\"\"127.0.0.1:8000\"]",
                        "end": {
                            "col": 67,
                            "line": 19,
                            "offset": 351
                        },
                        "start": {
                            "col": 5,
                            "line": 19,
                            "offset": 289
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "Dockerfile",
            "start": {
                "col": 1,
                "line": 19,
                "offset": 285
            }
        },
        {
            "check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges",
            "end": {
                "col": 5,
                "line": 4,
                "offset": 30
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "0b3b792daab2dc62fd32d3312b5f93adeaaf3cc56f473f8ee518dbf61d96ade648a3e2d21315c12e5e60c401facd36ad19f9c2d5785bd72732b6b486aa7254be_0",
                "is_ignored": false,
                "lines": "  db:",
                "message": "Service 'db' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10054,
                            "rule_id": "qNUoWr",
                            "rule_name": "yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                            "rv_id": 835301,
                            "url": "https://semgrep.dev/playground/r/vdTOQ35/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                            "version_id": "vdTOQ35"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                    "shortlink": "https://sg.run/0n8q",
                    "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "docker-compose"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$SERVICE": {
                        "abstract_content": "db",
                        "end": {
                            "col": 5,
                            "line": 4,
                            "offset": 30
                        },
                        "start": {
                            "col": 3,
                            "line": 4,
                            "offset": 28
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "docker-compose.yml",
            "start": {
                "col": 3,
                "line": 4,
                "offset": 28
            }
        },
        {
            "check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
            "end": {
                "col": 5,
                "line": 4,
                "offset": 30
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "a4c9a5b5da893201bcf0908973bfd478af5ce99508d5c1313c871a7cd96bf620cc2c844d70e6da41d1f6e470eed9006460a3c74048353a89477dec781d9b1505_0",
                "is_ignored": false,
                "lines": "  db:",
                "message": "Service 'db' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir",
                        "https://blog.atomist.com/security-of-docker-kubernetes/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10132,
                            "rule_id": "v8U5vN",
                            "rule_name": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                            "rv_id": 835305,
                            "url": "https://semgrep.dev/playground/r/ExTrWYr/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                            "version_id": "ExTrWYr"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                    "shortlink": "https://sg.run/e4JE",
                    "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "docker-compose"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$SERVICE": {
                        "abstract_content": "db",
                        "end": {
                            "col": 5,
                            "line": 4,
                            "offset": 30
                        },
                        "start": {
                            "col": 3,
                            "line": 4,
                            "offset": 28
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "docker-compose.yml",
            "start": {
                "col": 3,
                "line": 4,
                "offset": 28
            }
        },
        {
            "check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges",
            "end": {
                "col": 6,
                "line": 12,
                "offset": 225
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "87736b9d8cef31303e2d599e7507f7bb57a34861c06065179e905e836b2b11e3b8602d15a33bdd67ab003bc51353aeff42e128d7b5524e0ccdb4ada621866678_0",
                "is_ignored": false,
                "lines": "  web:",
                "message": "Service 'web' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10054,
                            "rule_id": "qNUoWr",
                            "rule_name": "yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                            "rv_id": 835301,
                            "url": "https://semgrep.dev/playground/r/vdTOQ35/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                            "version_id": "vdTOQ35"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                    "shortlink": "https://sg.run/0n8q",
                    "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "docker-compose"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$SERVICE": {
                        "abstract_content": "web",
                        "end": {
                            "col": 6,
                            "line": 12,
                            "offset": 225
                        },
                        "start": {
                            "col": 3,
                            "line": 12,
                            "offset": 222
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "docker-compose.yml",
            "start": {
                "col": 3,
                "line": 12,
                "offset": 222
            }
        },
        {
            "check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
            "end": {
                "col": 6,
                "line": 12,
                "offset": 225
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "56fce689fc6a4b07a3924c13c3ea6690b223f4fd2486fd71d596bcef142827c266921a13c9b96a0fd52786ca62cb124d6b86b27361e81f6bc9c9b8756921e6e6_0",
                "is_ignored": false,
                "lines": "  web:",
                "message": "Service 'web' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir",
                        "https://blog.atomist.com/security-of-docker-kubernetes/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10132,
                            "rule_id": "v8U5vN",
                            "rule_name": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                            "rv_id": 835305,
                            "url": "https://semgrep.dev/playground/r/ExTrWYr/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                            "version_id": "ExTrWYr"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                    "shortlink": "https://sg.run/e4JE",
                    "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "docker-compose"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$SERVICE": {
                        "abstract_content": "web",
                        "end": {
                            "col": 6,
                            "line": 12,
                            "offset": 225
                        },
                        "start": {
                            "col": 3,
                            "line": 12,
                            "offset": 222
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "docker-compose.yml",
            "start": {
                "col": 3,
                "line": 12,
                "offset": 222
            }
        },
        {
            "check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges",
            "end": {
                "col": 12,
                "line": 23,
                "offset": 440
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "23591327960ac4a8c9e6e4083739f90aba07d5e0f7cb69bf911ba42873c706a39fcbf591acefe665a018640dee047e1f58eefc5644b91d3969db5542fc9c42bb_0",
                "is_ignored": false,
                "lines": "  migration:",
                "message": "Service 'migration' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10054,
                            "rule_id": "qNUoWr",
                            "rule_name": "yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                            "rv_id": 835301,
                            "url": "https://semgrep.dev/playground/r/vdTOQ35/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                            "version_id": "vdTOQ35"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                    "shortlink": "https://sg.run/0n8q",
                    "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "docker-compose"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$SERVICE": {
                        "abstract_content": "migration",
                        "end": {
                            "col": 12,
                            "line": 23,
                            "offset": 440
                        },
                        "start": {
                            "col": 3,
                            "line": 23,
                            "offset": 431
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "docker-compose.yml",
            "start": {
                "col": 3,
                "line": 23,
                "offset": 431
            }
        },
        {
            "check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
            "end": {
                "col": 12,
                "line": 23,
                "offset": 440
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "983066f423cf6b5efbb7d4170512c6e7f27ec55f30b8b1d9abbaaf973915139eaca485929b450dc8adb04f90f0e65522a18973145462567a04914d940fdf484b_0",
                "is_ignored": false,
                "lines": "  migration:",
                "message": "Service 'migration' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir",
                        "https://blog.atomist.com/security-of-docker-kubernetes/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10132,
                            "rule_id": "v8U5vN",
                            "rule_name": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                            "rv_id": 835305,
                            "url": "https://semgrep.dev/playground/r/ExTrWYr/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                            "version_id": "ExTrWYr"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                    "shortlink": "https://sg.run/e4JE",
                    "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "docker-compose"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$SERVICE": {
                        "abstract_content": "migration",
                        "end": {
                            "col": 12,
                            "line": 23,
                            "offset": 440
                        },
                        "start": {
                            "col": 3,
                            "line": 23,
                            "offset": 431
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "docker-compose.yml",
            "start": {
                "col": 3,
                "line": 23,
                "offset": 431
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 26,
                "offset": 565
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "5703b2ecc77519b0192b8ea24c789a0de5bd4c8924599dacd255e659a00e4d33d38fbc493faa719e646d79ae3234e98c36b44fc5371cbfb61dbb399182ef8c4d_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rule_name": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 26,
                            "offset": 565
                        },
                        "start": {
                            "col": 5,
                            "line": 26,
                            "offset": 561
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "k8s/db-deployment.yaml",
            "start": {
                "col": 5,
                "line": 26,
                "offset": 561
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 15,
                "line": 36,
                "offset": 834
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "b0c5a33aa2b95f69278466aa3f3f3e447a755cc01bd8aa159ad9e49ef2b8fb2aa42b053412896a42a82d96af37ce282ca7563cc2dc4a88440a2c5c8d65f816b2_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
                "is_ignored": false,
                "lines": "          name: db",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rule_name": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "db",
                        "end": {
                            "col": 19,
                            "line": 36,
                            "offset": 838
                        },
                        "start": {
                            "col": 17,
                            "line": 36,
                            "offset": 836
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 15,
                            "line": 36,
                            "offset": 834
                        },
                        "start": {
                            "col": 11,
                            "line": 36,
                            "offset": 830
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "k8s/db-deployment.yaml",
            "start": {
                "col": 11,
                "line": 36,
                "offset": 830
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 26,
                "offset": 593
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "e709135764e3d6d3e83ec5189d95674be7de6377188dc1b9546d665383cf0c5ed6b3a3f5c1fa3864d8018ce93f91a1e28bdc5d9b72bcf67d01c40367dcc855f6_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rule_name": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 26,
                            "offset": 593
                        },
                        "start": {
                            "col": 5,
                            "line": 26,
                            "offset": 589
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "k8s/migration-deployment.yaml",
            "start": {
                "col": 5,
                "line": 26,
                "offset": 589
            }
        },
        {
            "check_id": "yaml.kubernetes.security.privileged-container.privileged-container",
            "end": {
                "col": 31,
                "line": 40,
                "offset": 956
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "7daaa9f52801057a1146c2375e95bf5204af499b1a89748526ebc5051704436ed40bf4c48f148918bdc7c156b23cf341c5ff7eb3f0bf70351a1ce739b743c5ac_0",
                "is_ignored": false,
                "lines": "        - args:\n            - python\n            - pygoat/manage.py\n            - migrate\n            - --noinput\n          image: pygoat/pygoat\n          name: migration\n          resources: {}\n          volumeMounts:\n            - mountPath: /app\n              name: migration-claim0\n          securityContext:\n              privileged: true",
                "message": "Container or pod is running in privileged mode. This grants the container the equivalent of root capabilities on the host machine. This can lead to container escapes, privilege escalation, and other security concerns. Remove the 'privileged' key to disable this capability.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10058,
                            "rule_id": "oqUz2p",
                            "rule_name": "yaml.kubernetes.security.privileged-container.privileged-container",
                            "rv_id": 835326,
                            "url": "https://semgrep.dev/playground/r/YDTlb8W/yaml.kubernetes.security.privileged-container.privileged-container",
                            "version_id": "YDTlb8W"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.privileged-container.privileged-container",
                    "shortlink": "https://sg.run/Ygr5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.privileged-container.privileged-container",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "k8s/migration-deployment.yaml",
            "start": {
                "col": 11,
                "line": 28,
                "offset": 623
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 26,
                "line": 39,
                "offset": 924
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "91db4f00ed6c4d67bc68f57338e32c7ef0a46ba9a33ecabb81682074df0f6151c3cfb4c93ff41ba162ca802aeab378305fc34cb9cc30ebd5db220b0ade85c1f6_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "          securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rule_name": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "migration",
                        "end": {
                            "col": 26,
                            "line": 34,
                            "offset": 783
                        },
                        "start": {
                            "col": 17,
                            "line": 34,
                            "offset": 774
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 26,
                            "line": 39,
                            "offset": 924
                        },
                        "start": {
                            "col": 11,
                            "line": 39,
                            "offset": 909
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "k8s/migration-deployment.yaml",
            "start": {
                "col": 11,
                "line": 39,
                "offset": 909
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 26,
                "offset": 569
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "0124ac1b38430cb0170b0f07d61b270e81ba159db7dc42989d10e34f0a97a547c12691b9240a5003b04ce6c540b7ef475eedac5197dfd155557e6a42dde96c04_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rule_name": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 26,
                            "offset": 569
                        },
                        "start": {
                            "col": 5,
                            "line": 26,
                            "offset": 565
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "k8s/web-deployment.yaml",
            "start": {
                "col": 5,
                "line": 26,
                "offset": 565
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 15,
                "line": 34,
                "offset": 753
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "9bbd53d2b2ea4876314c6a4c4b74a1493377cb46d897defc5acce9911ae792029a3016a6f27e2313e72fb1cb19a726133f7a6a8fb7157c3e17dd8c906b63f29e_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
                "is_ignored": false,
                "lines": "          name: web",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rule_name": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "web",
                        "end": {
                            "col": 20,
                            "line": 34,
                            "offset": 758
                        },
                        "start": {
                            "col": 17,
                            "line": 34,
                            "offset": 755
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 15,
                            "line": 34,
                            "offset": 753
                        },
                        "start": {
                            "col": 11,
                            "line": 34,
                            "offset": 749
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "k8s/web-deployment.yaml",
            "start": {
                "col": 11,
                "line": 34,
                "offset": 749
            }
        },
        {
            "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
            "end": {
                "col": 11,
                "line": 14,
                "offset": 423
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "1eb1c05c40586b1441e737593d07a875dadc63134e048fd1a7bb19f57855a37610f99fee3cca49c65466466a4a7c1bbb376509189eab86d3d0ecb55c7eb9675d_0",
                "is_ignored": false,
                "lines": "   <form enctype=\"multipart/form-data\" method=\"post\" action=\"/a9_lab\">\n       <input type=\"file\" name=\"file\"><br>\n       <br>\n       <button  class=\"btn btn-primary\" type=\"submit\">Upload</button>\n   </form>",
                "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://docs.djangoproject.com/en/4.2/howto/csrf/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 73471,
                            "rule_id": "PeUyYG",
                            "rule_name": "python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "rv_id": 834427,
                            "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "version_id": "yeTNgk0"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "shortlink": "https://sg.run/N0Bp",
                    "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "post",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$METHOD": {
                        "abstract_content": "post",
                        "end": {
                            "col": 52,
                            "line": 10,
                            "offset": 268
                        },
                        "start": {
                            "col": 48,
                            "line": 10,
                            "offset": 264
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/templates/Lab/A9/a9_lab.html",
            "start": {
                "col": 4,
                "line": 10,
                "offset": 220
            }
        },
        {
            "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
            "end": {
                "col": 16,
                "line": 18,
                "offset": 597
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "5dc8b5b7590e40e850ec04d481d25f53822f013c1ae90d2649596c20b93f51c6cf1434bd652720cfb299263efd65ac69c9eef53d6acfaaab5cdb56fd919c4854_0",
                "is_ignored": false,
                "lines": "        <form method=\"post\" action=\"/ba_lab\">\n\n            <input id=\"input\" type=\"text\" name=\"name\" placeholder=\"User Name\"><br>\n            <input id=\"input\" type=\"password\" name=\"pass\" placeholder=\"Password\"><br>\n            <button  style=\"margin-top:20px\" class=\"btn btn-primary\" type=\"submit\"> Log in</button>\n\n\n        </form>",
                "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://docs.djangoproject.com/en/4.2/howto/csrf/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 73471,
                            "rule_id": "PeUyYG",
                            "rule_name": "python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "rv_id": 834427,
                            "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "version_id": "yeTNgk0"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "shortlink": "https://sg.run/N0Bp",
                    "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "post",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$METHOD": {
                        "abstract_content": "post",
                        "end": {
                            "col": 27,
                            "line": 11,
                            "offset": 290
                        },
                        "start": {
                            "col": 23,
                            "line": 11,
                            "offset": 286
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/templates/Lab/BrokenAccess/ba_lab.html",
            "start": {
                "col": 9,
                "line": 11,
                "offset": 272
            }
        },
        {
            "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
            "end": {
                "col": 16,
                "line": 22,
                "offset": 763
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "b5fddde46b6efcc8c72aaf20356378635aa220bce6bd2b00aae72970d4a0b418b4a8cc624c3cd14d1af7e82ab3e6d20592ca2d446cdf988de59c9d1f9cf146d3_0",
                "is_ignored": false,
                "lines": "        <form method=\"post\" action=\"/otp\">\n            <label for='enter' >Enter Your OTP:</label>\n            <input id=\"enter\" type=\"number\" maxlength=\"3\" name=\"otp\"><br><br>\n            <button  class=\"btn btn-info\" type=\"submit\">Log in</button>\n        </form>",
                "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://docs.djangoproject.com/en/4.2/howto/csrf/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 73471,
                            "rule_id": "PeUyYG",
                            "rule_name": "python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "rv_id": 834427,
                            "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "version_id": "yeTNgk0"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "shortlink": "https://sg.run/N0Bp",
                    "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "post",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$METHOD": {
                        "abstract_content": "post",
                        "end": {
                            "col": 27,
                            "line": 18,
                            "offset": 525
                        },
                        "start": {
                            "col": 23,
                            "line": 18,
                            "offset": 521
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/templates/Lab/BrokenAuth/otp.html",
            "start": {
                "col": 9,
                "line": 18,
                "offset": 507
            }
        },
        {
            "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
            "end": {
                "col": 12,
                "line": 16,
                "offset": 663
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "e6ed237d5217768b53e414c17fca42a2b4da41bc0a80278ac4809e73570adcefdf617e9f8cb91ad9b6e9125653dfaba7b2fd8e31024a9ba279be0250cdeb2110_0",
                "is_ignored": false,
                "lines": "    <form method=\"post\" action=\"/cmd_lab\">\n        <input type=\"text\"  name=\"domain\" placeholder=\"Enter Domain Here\"><br><br>\n        <input type=\"radio\" id=\"linux\" name=\"os\" value=\"linux\">\n        <label for=\"linux\">Linux</label>\n        <input type=\"radio\" id=\"windows\" name=\"os\" value=\"win\">\n        <label for=\"windows\">Windows</label><br>\n        <button class=\"btn btn-primary\" type=\"submit\" style=\"align:right\">GO</button>\n    </form>",
                "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://docs.djangoproject.com/en/4.2/howto/csrf/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 73471,
                            "rule_id": "PeUyYG",
                            "rule_name": "python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "rv_id": 834427,
                            "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "version_id": "yeTNgk0"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "shortlink": "https://sg.run/N0Bp",
                    "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "post",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$METHOD": {
                        "abstract_content": "post",
                        "end": {
                            "col": 23,
                            "line": 9,
                            "offset": 244
                        },
                        "start": {
                            "col": 19,
                            "line": 9,
                            "offset": 240
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/templates/Lab/CMD/cmd_lab.html",
            "start": {
                "col": 5,
                "line": 9,
                "offset": 226
            }
        },
        {
            "check_id": "python.django.security.audit.raw-query.avoid-raw-sql",
            "end": {
                "col": 123,
                "line": 86,
                "offset": 2551
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "c7870b6ed13608e5cfd4f54b81b87c1bb070fe2aa88a17bb306ded2c88823cf9ad6ebbc115d1d6815a22e2cb1d022cb423d4ead49afef153617da3d9c68151b7_0",
                "is_ignored": false,
                "lines": "                val=login.objects.raw(\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\")",
                "message": "Detected the use of 'RawSQL' or 'raw' indicating the execution of a non-parameterized SQL query. This could lead to a SQL injection and therefore protected information could be leaked. Instead, use Django ORM and parameterized queries before raw SQL. An example of using the Django ORM is: `People.objects.get(name='Bob')`",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.0/ref/models/expressions/#raw-sql-expressions",
                        "https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9473,
                            "rule_id": "EwU2JA",
                            "rule_name": "python.django.security.audit.raw-query.avoid-raw-sql",
                            "rv_id": 834409,
                            "url": "https://semgrep.dev/playground/r/A8T37b2/python.django.security.audit.raw-query.avoid-raw-sql",
                            "version_id": "A8T37b2"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.raw-query.avoid-raw-sql",
                    "shortlink": "https://sg.run/weDA",
                    "source": "https://semgrep.dev/r/python.django.security.audit.raw-query.avoid-raw-sql",
                    "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "SQL Injection"
                    ]
                },
                "metavars": {
                    "$MODEL": {
                        "abstract_content": "login login login",
                        "end": {
                            "col": 26,
                            "line": 86,
                            "offset": 2454
                        },
                        "start": {
                            "col": 21,
                            "line": 86,
                            "offset": 2449
                        }
                    },
                    "$QUERY": {
                        "abstract_content": "\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\"",
                        "end": {
                            "col": 122,
                            "line": 86,
                            "offset": 2550
                        },
                        "start": {
                            "col": 39,
                            "line": 86,
                            "offset": 2467
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 21,
                "line": 86,
                "offset": 2449
            }
        },
        {
            "check_id": "python.django.security.injection.tainted-sql-string.tainted-sql-string",
            "end": {
                "col": 122,
                "line": 86,
                "offset": 2550
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "name",
                            "location": {
                                "end": {
                                    "col": 13,
                                    "line": 76,
                                    "offset": 2290
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 9,
                                    "line": 76,
                                    "offset": 2286
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 122,
                                    "line": 86,
                                    "offset": 2550
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 39,
                                    "line": 86,
                                    "offset": 2467
                                }
                            },
                            "\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\""
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 26,
                                    "line": 76,
                                    "offset": 2303
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 14,
                                    "line": 76,
                                    "offset": 2291
                                }
                            },
                            "request.POST"
                        ]
                    ]
                },
                "engine_kind": "PRO",
                "fingerprint": "405157f2ecf23d7ba990c59c3103b3526252fe5a35e94756198a578bb1de94f0bf46c0193a86d76781882eee771131a15058c7cca5e148c3a8e9e1a2194aacf9_0",
                "is_ignored": false,
                "lines": "                val=login.objects.raw(\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\")",
                "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using the Django object-relational mappers (ORM) instead of raw SQL queries.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.0/topics/security/#sql-injection-protection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 14701,
                            "rule_id": "lBU8Ad",
                            "rule_name": "python.django.security.injection.tainted-sql-string.tainted-sql-string",
                            "rv_id": 906695,
                            "url": "https://semgrep.dev/playground/r/X0TA1zR/python.django.security.injection.tainted-sql-string.tainted-sql-string",
                            "version_id": "X0TA1zR"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.injection.tainted-sql-string.tainted-sql-string",
                    "shortlink": "https://sg.run/PbZp",
                    "source": "https://semgrep.dev/r/python.django.security.injection.tainted-sql-string.tainted-sql-string",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Mass Assignment"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "SELECT",
                        "end": {
                            "col": 7,
                            "line": 1,
                            "offset": 6
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$ANYTHING": {
                        "abstract_content": "POST",
                        "end": {
                            "col": 26,
                            "line": 76,
                            "offset": 2303
                        },
                        "start": {
                            "col": 22,
                            "line": 76,
                            "offset": 2299
                        }
                    },
                    "$SQLSTR": {
                        "abstract_content": "SELECT * FROM introduction_login WHERE user='",
                        "end": {
                            "col": 85,
                            "line": 86,
                            "offset": 2513
                        },
                        "start": {
                            "col": 40,
                            "line": 86,
                            "offset": 2468
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 39,
                "line": 86,
                "offset": 2467
            }
        },
        {
            "check_id": "python.lang.security.deserialization.pickle.avoid-pickle",
            "end": {
                "col": 40,
                "line": 110,
                "offset": 3394
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "91ffe9d635e9c2634c3a7d698754b7272ff9ad942888dce1c163d8dacd41f1f2da611765d16e2f86bf9de2bd5b485029278664ea0f5836839647ff414983aa0b_0",
                "is_ignored": false,
                "lines": "pickled_user = pickle.dumps(TestUser())",
                "message": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-502: Deserialization of Untrusted Data"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2017 - Insecure Deserialization",
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://docs.python.org/3/library/pickle.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9675,
                            "rule_id": "EwU2BJ",
                            "rule_name": "python.lang.security.deserialization.pickle.avoid-pickle",
                            "rv_id": 834665,
                            "url": "https://semgrep.dev/playground/r/5PTyG4j/python.lang.security.deserialization.pickle.avoid-pickle",
                            "version_id": "5PTyG4j"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
                    "shortlink": "https://sg.run/OPwB",
                    "source": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Insecure Deserialization "
                    ]
                },
                "metavars": {
                    "$FUNC": {
                        "abstract_content": "dumps",
                        "end": {
                            "col": 28,
                            "line": 110,
                            "offset": 3382
                        },
                        "start": {
                            "col": 23,
                            "line": 110,
                            "offset": 3377
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 16,
                "line": 110,
                "offset": 3370
            }
        },
        {
            "check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
            "end": {
                "col": 73,
                "line": 119,
                "offset": 3799
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "a75c82148a7c50fd867137490fe76e40b3f9321dd1e6a511cbaa0f77d78c20df0aeaa1239194d30ededa6168ce2818a36fc4e0777ef2af6b0cc6d244fb3cb913_0",
                "is_ignored": false,
                "lines": "            response.set_cookie(key='token',value=token.decode('utf-8'))",
                "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.",
                "metadata": {
                    "asvs": {
                        "control_id": "3.4 Missing Cookie Attributes",
                        "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
                        "section": "V3: Session Management Verification Requirements",
                        "version": "4"
                    },
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie",
                        "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/",
                        "https://bento.dev/checks/flask/secure-set-cookie/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9474,
                            "rule_id": "7KUQ2E",
                            "rule_name": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "rv_id": 834410,
                            "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "version_id": "BjTe02P"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "shortlink": "https://sg.run/x1WL",
                    "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 13,
                "line": 119,
                "offset": 3739
            }
        },
        {
            "check_id": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
            "end": {
                "col": 40,
                "line": 122,
                "offset": 3897
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "token",
                            "location": {
                                "end": {
                                    "col": 14,
                                    "line": 116,
                                    "offset": 3636
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 9,
                                    "line": 116,
                                    "offset": 3631
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 40,
                                    "line": 122,
                                    "offset": 3897
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 21,
                                    "line": 122,
                                    "offset": 3878
                                }
                            },
                            "pickle.loads(token)"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 45,
                                    "line": 116,
                                    "offset": 3667
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 17,
                                    "line": 116,
                                    "offset": 3639
                                }
                            },
                            "request.COOKIES.get('token')"
                        ]
                    ]
                },
                "engine_kind": "PRO",
                "fingerprint": "f14147ee9481b395dc6691efed73e2c16a81514217937bfc31c7488ac1bde325de0c37b6df1d8bee7f9e0504be2cf0d60c0057a0264f2f693ff8bb768b8e29b8_0",
                "is_ignored": false,
                "lines": "            admin = pickle.loads(token)",
                "message": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-502: Deserialization of Untrusted Data"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A08:2017 - Insecure Deserialization",
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://docs.python.org/3/library/pickle.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9467,
                            "rule_id": "OrU3e6",
                            "rule_name": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                            "rv_id": 834402,
                            "url": "https://semgrep.dev/playground/r/3ZT3A9q/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                            "version_id": "3ZT3A9q"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                    "shortlink": "https://sg.run/9oyr",
                    "source": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Insecure Deserialization "
                    ]
                },
                "metavars": {
                    "$INSIDE": {
                        "abstract_content": "insec_des_lab",
                        "end": {
                            "col": 18,
                            "line": 113,
                            "offset": 3459
                        },
                        "start": {
                            "col": 5,
                            "line": 113,
                            "offset": 3446
                        }
                    },
                    "$PARAM": {
                        "abstract_content": "request",
                        "end": {
                            "col": 26,
                            "line": 113,
                            "offset": 3467
                        },
                        "start": {
                            "col": 19,
                            "line": 113,
                            "offset": 3460
                        }
                    },
                    "$PICKLEFUNC": {
                        "abstract_content": "loads",
                        "end": {
                            "col": 33,
                            "line": 122,
                            "offset": 3890
                        },
                        "start": {
                            "col": 28,
                            "line": 122,
                            "offset": 3885
                        }
                    },
                    "$REQFUNC": {
                        "abstract_content": "COOKIES",
                        "end": {
                            "col": 32,
                            "line": 116,
                            "offset": 3654
                        },
                        "start": {
                            "col": 25,
                            "line": 116,
                            "offset": 3647
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 21,
                "line": 122,
                "offset": 3878
            }
        },
        {
            "check_id": "python.lang.security.deserialization.pickle.avoid-pickle",
            "end": {
                "col": 40,
                "line": 122,
                "offset": 3897
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "f51bc2709c343f5f5125ec9577a2b7377d7388719ab6c9ebbaba826dba3ebfe0464a4b779420720f205f6b5750f188bbe0bc98c35f05527ea96f2b2059563fb8_0",
                "is_ignored": false,
                "lines": "            admin = pickle.loads(token)",
                "message": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-502: Deserialization of Untrusted Data"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2017 - Insecure Deserialization",
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://docs.python.org/3/library/pickle.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9675,
                            "rule_id": "EwU2BJ",
                            "rule_name": "python.lang.security.deserialization.pickle.avoid-pickle",
                            "rv_id": 834665,
                            "url": "https://semgrep.dev/playground/r/5PTyG4j/python.lang.security.deserialization.pickle.avoid-pickle",
                            "version_id": "5PTyG4j"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
                    "shortlink": "https://sg.run/OPwB",
                    "source": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Insecure Deserialization "
                    ]
                },
                "metavars": {
                    "$FUNC": {
                        "abstract_content": "loads",
                        "end": {
                            "col": 33,
                            "line": 122,
                            "offset": 3890
                        },
                        "start": {
                            "col": 28,
                            "line": 122,
                            "offset": 3885
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 21,
                "line": 122,
                "offset": 3878
            }
        },
        {
            "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
            "end": {
                "col": 33,
                "line": 155,
                "offset": 4832
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "726e7f40da16fe046f11090cbc84265bf2174b85513c64bf6b53e35814e4e8d5f128e567ad0ab98075734de8f029148f9f75c90a923e005b0a13c73b6b05131b_0",
                "is_ignored": false,
                "lines": "@csrf_exempt\ndef xxe_see(request):\n    if request.user.is_authenticated:\n\n        data=comments.objects.all();\n        com=data[0].comment\n        return render(request,'Lab/XXE/xxe_lab.html',{\"com\":com})\n    else:\n        return redirect('login')",
                "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-352: Cross-Site Request Forgery (CSRF)"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9469,
                            "rule_id": "v8UnqO",
                            "rule_name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "rv_id": 834404,
                            "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "version_id": "PkTxrAN"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "shortlink": "https://sg.run/rd5e",
                    "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$R": {
                        "abstract_content": "xxe_see",
                        "end": {
                            "col": 12,
                            "line": 148,
                            "offset": 4609
                        },
                        "start": {
                            "col": 5,
                            "line": 148,
                            "offset": 4602
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 1,
                "line": 147,
                "offset": 4585
            }
        },
        {
            "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
            "end": {
                "col": 51,
                "line": 173,
                "offset": 5387
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "0a902e4d5ee4dace22e5b505c56b61d74d9796705b88ea76aa8c02ed2cee7f6d046cd1e53eb9a15e3dd4aec32fc1df07215a3031db3cb601dfce219f8c19e78a_0",
                "is_ignored": false,
                "lines": "@csrf_exempt\ndef xxe_parse(request):\n\n    parser = make_parser()\n    parser.setFeature(feature_external_ges, True)\n    doc = parseString(request.body.decode('utf-8'), parser=parser)\n    for event, node in doc:\n        if event == START_ELEMENT and node.tagName == 'text':\n            doc.expandNode(node)\n            text = node.toxml()\n    startInd = text.find('>')\n    endInd = text.find('<', startInd)\n    text = text[startInd + 1:endInd:]\n    p=comments.objects.filter(id=1).update(comment=text);\n\n    return render(request, 'Lab/XXE/xxe_lab.html')",
                "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-352: Cross-Site Request Forgery (CSRF)"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9469,
                            "rule_id": "v8UnqO",
                            "rule_name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "rv_id": 834404,
                            "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "version_id": "PkTxrAN"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "shortlink": "https://sg.run/rd5e",
                    "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$R": {
                        "abstract_content": "xxe_parse",
                        "end": {
                            "col": 14,
                            "line": 159,
                            "offset": 4861
                        },
                        "start": {
                            "col": 5,
                            "line": 159,
                            "offset": 4852
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 1,
                "line": 158,
                "offset": 4835
            }
        },
        {
            "check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
            "end": {
                "col": 50,
                "line": 193,
                "offset": 6165
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4f2a5ff97ccc997c8069c844e376f16521d81bf08c13b4ed63c4690b85a49fc1ad488f82dbae07e8d35c19fe3d5af692d4ee954200bafb505ed346bd753ff5af_0",
                "is_ignored": false,
                "lines": "                response = HttpResponse(rendered)",
                "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render",
                        "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9481,
                            "rule_id": "PeUZgE",
                            "rule_name": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "rv_id": 834415,
                            "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "version_id": "qkTQnll"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "shortlink": "https://sg.run/EknN",
                    "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 28,
                "line": 193,
                "offset": 6143
            }
        },
        {
            "check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
            "end": {
                "col": 105,
                "line": 194,
                "offset": 6270
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "a75c82148a7c50fd867137490fe76e40b3f9321dd1e6a511cbaa0f77d78c20df0aeaa1239194d30ededa6168ce2818a36fc4e0777ef2af6b0cc6d244fb3cb913_1",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.",
                "metadata": {
                    "asvs": {
                        "control_id": "3.4 Missing Cookie Attributes",
                        "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
                        "section": "V3: Session Management Verification Requirements",
                        "version": "4"
                    },
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie",
                        "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/",
                        "https://bento.dev/checks/flask/secure-set-cookie/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9474,
                            "rule_id": "7KUQ2E",
                            "rule_name": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "rv_id": 834410,
                            "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "version_id": "BjTe02P"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "shortlink": "https://sg.run/x1WL",
                    "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 17,
                "line": 194,
                "offset": 6182
            }
        },
        {
            "check_id": "python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
            "end": {
                "col": 105,
                "line": 194,
                "offset": 6270
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "51e9b6d6681f996a97634e05dea86b62eded723a535d1f049b393304312d0b6086668e2d3cb2f98192d6f680b8fa51bc5e34b58f8d2f8d0fd9f46e843cabea3c_0",
                "fix": "HttpResponse(rendered).set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False, httponly=True)",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie where the `HttpOnly` flag is either missing or disabled. The `HttpOnly` cookie flag instructs the browser to forbid client-side JavaScript to read the cookie. If JavaScript interaction is required, you can ignore this finding. However, set the `HttpOnly` flag to `true` in all other cases.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Missing HttpOnly Flag in Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137923,
                            "rule_id": "6JUvlyl",
                            "rule_name": "python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                            "rv_id": 924411,
                            "url": "https://semgrep.dev/playground/r/zyTGZXL/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                            "version_id": "zyTGZXL"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                    "shortlink": "https://sg.run/9Az3z",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$...ARGS": {
                        "abstract_content": "'userid'obj.userid max_age 31449600 samesite None secure False",
                        "end": {
                            "col": 104,
                            "line": 194,
                            "offset": 6269
                        },
                        "start": {
                            "col": 37,
                            "line": 194,
                            "offset": 6202
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 50,
                            "line": 193,
                            "offset": 6165
                        },
                        "start": {
                            "col": 28,
                            "line": 193,
                            "offset": 6143
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 36,
                            "line": 194,
                            "offset": 6201
                        },
                        "start": {
                            "col": 26,
                            "line": 194,
                            "offset": 6191
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 17,
                "line": 194,
                "offset": 6182
            }
        },
        {
            "check_id": "python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
            "end": {
                "col": 90,
                "line": 194,
                "offset": 6255
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4925cb9f404943f37d4b107e175b82c5e9405d7ebe22dfac7f50ff92261e8827ef27a7204fa04639e51b42a3c6291ad51fafbb94d615ce9e843301032d483047_0",
                "fix": "\"Strict\"",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie options with the `SameSite` flag set to \"None\". This is a potential security risk that arises from the way web browsers manage cookies. In a typical web application, cookies are used to store and transmit session-related data between a client and a server. To enhance security, cookies can be marked with the \"SameSite\" attribute, which restricts their usage based on the origin of the page that set them. This attribute can have three values: \"Strict,\" \"Lax,\" or \"None\". Make sure the `SameSite` attribute of the important cookies (e.g., session cookie) is set to a reasonable value. When `SameSite` is set to \"Strict\", no 3rd party cookie will be sent with outgoing requests, this is the most secure and private setting but harder to deploy with good usability. Setting it to \"Lax\" is the minimum requirement.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-1275: Sensitive Cookie with Improper SameSite Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Improper SameSite Attribute in Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control",
                        "https://web.dev/articles/samesite-cookies-explained"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137925,
                            "rule_id": "zdUKwGd",
                            "rule_name": "python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                            "rv_id": 924413,
                            "url": "https://semgrep.dev/playground/r/2KTdjA5/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                            "version_id": "2KTdjA5"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                    "shortlink": "https://sg.run/r6XN1",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$NONE": {
                        "abstract_content": "None",
                        "end": {
                            "col": 90,
                            "line": 194,
                            "offset": 6255
                        },
                        "start": {
                            "col": 86,
                            "line": 194,
                            "offset": 6251
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 50,
                            "line": 193,
                            "offset": 6165
                        },
                        "start": {
                            "col": 28,
                            "line": 193,
                            "offset": 6143
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 36,
                            "line": 194,
                            "offset": 6201
                        },
                        "start": {
                            "col": 26,
                            "line": 194,
                            "offset": 6191
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 86,
                "line": 194,
                "offset": 6251
            }
        },
        {
            "check_id": "python.django.web.django-cookie-secure-false.django-cookie-secure-false",
            "end": {
                "col": 104,
                "line": 194,
                "offset": 6269
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "eee56a0b58d64fab721e8a2cadeb588435187d29d0f5a6dbd4339e099d086a4c15700071af89caf28a3cd38d15c4f5ce9d1116132916c6deb74cc1b985885b61_0",
                "fix": "True",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie where the `Secure` flag is either missing or disabled. The `Secure` cookie flag instructs the browser to forbid sending the cookie over an insecure HTTP request. Set the `Secure` flag to `true` so the cookie will only be sent over HTTPS.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Missing 'Secure' Attribute in django Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137926,
                            "rule_id": "pKU1dbZ",
                            "rule_name": "python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                            "rv_id": 924414,
                            "url": "https://semgrep.dev/playground/r/X0TAqon/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                            "version_id": "X0TAqon"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                    "shortlink": "https://sg.run/bwGWd",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$FALSE": {
                        "abstract_content": "False",
                        "end": {
                            "col": 104,
                            "line": 194,
                            "offset": 6269
                        },
                        "start": {
                            "col": 99,
                            "line": 194,
                            "offset": 6264
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 50,
                            "line": 193,
                            "offset": 6165
                        },
                        "start": {
                            "col": 28,
                            "line": 193,
                            "offset": 6143
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 36,
                            "line": 194,
                            "offset": 6201
                        },
                        "start": {
                            "col": 26,
                            "line": 194,
                            "offset": 6191
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 99,
                "line": 194,
                "offset": 6264
            }
        },
        {
            "check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
            "end": {
                "col": 46,
                "line": 207,
                "offset": 6958
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4f2a5ff97ccc997c8069c844e376f16521d81bf08c13b4ed63c4690b85a49fc1ad488f82dbae07e8d35c19fe3d5af692d4ee954200bafb505ed346bd753ff5af_1",
                "is_ignored": false,
                "lines": "            response = HttpResponse(rendered)",
                "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render",
                        "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9481,
                            "rule_id": "PeUZgE",
                            "rule_name": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "rv_id": 834415,
                            "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "version_id": "qkTQnll"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "shortlink": "https://sg.run/EknN",
                    "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 24,
                "line": 207,
                "offset": 6936
            }
        },
        {
            "check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
            "end": {
                "col": 101,
                "line": 208,
                "offset": 7059
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "a75c82148a7c50fd867137490fe76e40b3f9321dd1e6a511cbaa0f77d78c20df0aeaa1239194d30ededa6168ce2818a36fc4e0777ef2af6b0cc6d244fb3cb913_2",
                "is_ignored": false,
                "lines": "            response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.",
                "metadata": {
                    "asvs": {
                        "control_id": "3.4 Missing Cookie Attributes",
                        "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
                        "section": "V3: Session Management Verification Requirements",
                        "version": "4"
                    },
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie",
                        "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/",
                        "https://bento.dev/checks/flask/secure-set-cookie/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9474,
                            "rule_id": "7KUQ2E",
                            "rule_name": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "rv_id": 834410,
                            "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "version_id": "BjTe02P"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "shortlink": "https://sg.run/x1WL",
                    "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 13,
                "line": 208,
                "offset": 6971
            }
        },
        {
            "check_id": "python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
            "end": {
                "col": 101,
                "line": 208,
                "offset": 7059
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "51e9b6d6681f996a97634e05dea86b62eded723a535d1f049b393304312d0b6086668e2d3cb2f98192d6f680b8fa51bc5e34b58f8d2f8d0fd9f46e843cabea3c_1",
                "fix": "HttpResponse(rendered).set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False, httponly=True)",
                "is_ignored": false,
                "lines": "            response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie where the `HttpOnly` flag is either missing or disabled. The `HttpOnly` cookie flag instructs the browser to forbid client-side JavaScript to read the cookie. If JavaScript interaction is required, you can ignore this finding. However, set the `HttpOnly` flag to `true` in all other cases.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Missing HttpOnly Flag in Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137923,
                            "rule_id": "6JUvlyl",
                            "rule_name": "python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                            "rv_id": 924411,
                            "url": "https://semgrep.dev/playground/r/zyTGZXL/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                            "version_id": "zyTGZXL"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                    "shortlink": "https://sg.run/9Az3z",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$...ARGS": {
                        "abstract_content": "'userid'obj.userid max_age 31449600 samesite None secure False",
                        "end": {
                            "col": 100,
                            "line": 208,
                            "offset": 7058
                        },
                        "start": {
                            "col": 33,
                            "line": 208,
                            "offset": 6991
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 46,
                            "line": 207,
                            "offset": 6958
                        },
                        "start": {
                            "col": 24,
                            "line": 207,
                            "offset": 6936
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 32,
                            "line": 208,
                            "offset": 6990
                        },
                        "start": {
                            "col": 22,
                            "line": 208,
                            "offset": 6980
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 13,
                "line": 208,
                "offset": 6971
            }
        },
        {
            "check_id": "python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
            "end": {
                "col": 86,
                "line": 208,
                "offset": 7044
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4925cb9f404943f37d4b107e175b82c5e9405d7ebe22dfac7f50ff92261e8827ef27a7204fa04639e51b42a3c6291ad51fafbb94d615ce9e843301032d483047_1",
                "fix": "\"Strict\"",
                "is_ignored": false,
                "lines": "            response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie options with the `SameSite` flag set to \"None\". This is a potential security risk that arises from the way web browsers manage cookies. In a typical web application, cookies are used to store and transmit session-related data between a client and a server. To enhance security, cookies can be marked with the \"SameSite\" attribute, which restricts their usage based on the origin of the page that set them. This attribute can have three values: \"Strict,\" \"Lax,\" or \"None\". Make sure the `SameSite` attribute of the important cookies (e.g., session cookie) is set to a reasonable value. When `SameSite` is set to \"Strict\", no 3rd party cookie will be sent with outgoing requests, this is the most secure and private setting but harder to deploy with good usability. Setting it to \"Lax\" is the minimum requirement.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-1275: Sensitive Cookie with Improper SameSite Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Improper SameSite Attribute in Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control",
                        "https://web.dev/articles/samesite-cookies-explained"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137925,
                            "rule_id": "zdUKwGd",
                            "rule_name": "python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                            "rv_id": 924413,
                            "url": "https://semgrep.dev/playground/r/2KTdjA5/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                            "version_id": "2KTdjA5"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                    "shortlink": "https://sg.run/r6XN1",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$NONE": {
                        "abstract_content": "None",
                        "end": {
                            "col": 86,
                            "line": 208,
                            "offset": 7044
                        },
                        "start": {
                            "col": 82,
                            "line": 208,
                            "offset": 7040
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 46,
                            "line": 207,
                            "offset": 6958
                        },
                        "start": {
                            "col": 24,
                            "line": 207,
                            "offset": 6936
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 32,
                            "line": 208,
                            "offset": 6990
                        },
                        "start": {
                            "col": 22,
                            "line": 208,
                            "offset": 6980
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 82,
                "line": 208,
                "offset": 7040
            }
        },
        {
            "check_id": "python.django.web.django-cookie-secure-false.django-cookie-secure-false",
            "end": {
                "col": 100,
                "line": 208,
                "offset": 7058
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "eee56a0b58d64fab721e8a2cadeb588435187d29d0f5a6dbd4339e099d086a4c15700071af89caf28a3cd38d15c4f5ce9d1116132916c6deb74cc1b985885b61_1",
                "fix": "True",
                "is_ignored": false,
                "lines": "            response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie where the `Secure` flag is either missing or disabled. The `Secure` cookie flag instructs the browser to forbid sending the cookie over an insecure HTTP request. Set the `Secure` flag to `true` so the cookie will only be sent over HTTPS.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Missing 'Secure' Attribute in django Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137926,
                            "rule_id": "pKU1dbZ",
                            "rule_name": "python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                            "rv_id": 924414,
                            "url": "https://semgrep.dev/playground/r/X0TAqon/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                            "version_id": "X0TAqon"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                    "shortlink": "https://sg.run/bwGWd",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$FALSE": {
                        "abstract_content": "False",
                        "end": {
                            "col": 100,
                            "line": 208,
                            "offset": 7058
                        },
                        "start": {
                            "col": 95,
                            "line": 208,
                            "offset": 7053
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 46,
                            "line": 207,
                            "offset": 6958
                        },
                        "start": {
                            "col": 24,
                            "line": 207,
                            "offset": 6936
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 32,
                            "line": 208,
                            "offset": 6990
                        },
                        "start": {
                            "col": 22,
                            "line": 208,
                            "offset": 6980
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 95,
                "line": 208,
                "offset": 7053
            }
        },
        {
            "check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
            "end": {
                "col": 50,
                "line": 221,
                "offset": 7700
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4f2a5ff97ccc997c8069c844e376f16521d81bf08c13b4ed63c4690b85a49fc1ad488f82dbae07e8d35c19fe3d5af692d4ee954200bafb505ed346bd753ff5af_2",
                "is_ignored": false,
                "lines": "                response = HttpResponse(rendered)",
                "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render",
                        "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9481,
                            "rule_id": "PeUZgE",
                            "rule_name": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "rv_id": 834415,
                            "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "version_id": "qkTQnll"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "shortlink": "https://sg.run/EknN",
                    "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 28,
                "line": 221,
                "offset": 7678
            }
        },
        {
            "check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
            "end": {
                "col": 105,
                "line": 222,
                "offset": 7805
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "a75c82148a7c50fd867137490fe76e40b3f9321dd1e6a511cbaa0f77d78c20df0aeaa1239194d30ededa6168ce2818a36fc4e0777ef2af6b0cc6d244fb3cb913_3",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.",
                "metadata": {
                    "asvs": {
                        "control_id": "3.4 Missing Cookie Attributes",
                        "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
                        "section": "V3: Session Management Verification Requirements",
                        "version": "4"
                    },
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie",
                        "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/",
                        "https://bento.dev/checks/flask/secure-set-cookie/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9474,
                            "rule_id": "7KUQ2E",
                            "rule_name": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "rv_id": 834410,
                            "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "version_id": "BjTe02P"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "shortlink": "https://sg.run/x1WL",
                    "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 17,
                "line": 222,
                "offset": 7717
            }
        },
        {
            "check_id": "python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
            "end": {
                "col": 105,
                "line": 222,
                "offset": 7805
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "51e9b6d6681f996a97634e05dea86b62eded723a535d1f049b393304312d0b6086668e2d3cb2f98192d6f680b8fa51bc5e34b58f8d2f8d0fd9f46e843cabea3c_2",
                "fix": "HttpResponse(rendered).set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False, httponly=True)",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie where the `HttpOnly` flag is either missing or disabled. The `HttpOnly` cookie flag instructs the browser to forbid client-side JavaScript to read the cookie. If JavaScript interaction is required, you can ignore this finding. However, set the `HttpOnly` flag to `true` in all other cases.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Missing HttpOnly Flag in Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137923,
                            "rule_id": "6JUvlyl",
                            "rule_name": "python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                            "rv_id": 924411,
                            "url": "https://semgrep.dev/playground/r/zyTGZXL/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                            "version_id": "zyTGZXL"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                    "shortlink": "https://sg.run/9Az3z",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-httponly-missing.django-cookie-httponly-missing",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$...ARGS": {
                        "abstract_content": "'userid'obj.userid max_age 31449600 samesite None secure False",
                        "end": {
                            "col": 104,
                            "line": 222,
                            "offset": 7804
                        },
                        "start": {
                            "col": 37,
                            "line": 222,
                            "offset": 7737
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 50,
                            "line": 221,
                            "offset": 7700
                        },
                        "start": {
                            "col": 28,
                            "line": 221,
                            "offset": 7678
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 36,
                            "line": 222,
                            "offset": 7736
                        },
                        "start": {
                            "col": 26,
                            "line": 222,
                            "offset": 7726
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 17,
                "line": 222,
                "offset": 7717
            }
        },
        {
            "check_id": "python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
            "end": {
                "col": 90,
                "line": 222,
                "offset": 7790
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4925cb9f404943f37d4b107e175b82c5e9405d7ebe22dfac7f50ff92261e8827ef27a7204fa04639e51b42a3c6291ad51fafbb94d615ce9e843301032d483047_2",
                "fix": "\"Strict\"",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie options with the `SameSite` flag set to \"None\". This is a potential security risk that arises from the way web browsers manage cookies. In a typical web application, cookies are used to store and transmit session-related data between a client and a server. To enhance security, cookies can be marked with the \"SameSite\" attribute, which restricts their usage based on the origin of the page that set them. This attribute can have three values: \"Strict,\" \"Lax,\" or \"None\". Make sure the `SameSite` attribute of the important cookies (e.g., session cookie) is set to a reasonable value. When `SameSite` is set to \"Strict\", no 3rd party cookie will be sent with outgoing requests, this is the most secure and private setting but harder to deploy with good usability. Setting it to \"Lax\" is the minimum requirement.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-1275: Sensitive Cookie with Improper SameSite Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Improper SameSite Attribute in Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control",
                        "https://web.dev/articles/samesite-cookies-explained"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137925,
                            "rule_id": "zdUKwGd",
                            "rule_name": "python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                            "rv_id": 924413,
                            "url": "https://semgrep.dev/playground/r/2KTdjA5/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                            "version_id": "2KTdjA5"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                    "shortlink": "https://sg.run/r6XN1",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-samesite-none.django-cookie-samesite-none",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$NONE": {
                        "abstract_content": "None",
                        "end": {
                            "col": 90,
                            "line": 222,
                            "offset": 7790
                        },
                        "start": {
                            "col": 86,
                            "line": 222,
                            "offset": 7786
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 50,
                            "line": 221,
                            "offset": 7700
                        },
                        "start": {
                            "col": 28,
                            "line": 221,
                            "offset": 7678
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 36,
                            "line": 222,
                            "offset": 7736
                        },
                        "start": {
                            "col": 26,
                            "line": 222,
                            "offset": 7726
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 86,
                "line": 222,
                "offset": 7786
            }
        },
        {
            "check_id": "python.django.web.django-cookie-secure-false.django-cookie-secure-false",
            "end": {
                "col": 104,
                "line": 222,
                "offset": 7804
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "eee56a0b58d64fab721e8a2cadeb588435187d29d0f5a6dbd4339e099d086a4c15700071af89caf28a3cd38d15c4f5ce9d1116132916c6deb74cc1b985885b61_2",
                "fix": "True",
                "is_ignored": false,
                "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)",
                "message": "Detected a cookie where the `Secure` flag is either missing or disabled. The `Secure` cookie flag instructs the browser to forbid sending the cookie over an insecure HTTP request. Set the `Secure` flag to `true` so the cookie will only be sent over HTTPS.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                    ],
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "display-name": "Missing 'Secure' Attribute in django Cookie",
                    "functional-categories": [
                        "web::search::cookie-config::django",
                        "web::search::cookie-config::starlette"
                    ],
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 137926,
                            "rule_id": "pKU1dbZ",
                            "rule_name": "python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                            "rv_id": 924414,
                            "url": "https://semgrep.dev/playground/r/X0TAqon/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                            "version_id": "X0TAqon"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                    "shortlink": "https://sg.run/bwGWd",
                    "source": "https://semgrep.dev/r/python.django.web.django-cookie-secure-false.django-cookie-secure-false",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cookie",
                        "cookies",
                        "django",
                        "web"
                    ],
                    "vulnerability_class": [
                        "Cookie Security"
                    ]
                },
                "metavars": {
                    "$FALSE": {
                        "abstract_content": "False",
                        "end": {
                            "col": 104,
                            "line": 222,
                            "offset": 7804
                        },
                        "start": {
                            "col": 99,
                            "line": 222,
                            "offset": 7799
                        }
                    },
                    "$RESPONSE": {
                        "abstract_content": "HttpResponse(rendered)",
                        "end": {
                            "col": 50,
                            "line": 221,
                            "offset": 7700
                        },
                        "start": {
                            "col": 28,
                            "line": 221,
                            "offset": 7678
                        }
                    },
                    "$SET_COOKIE": {
                        "abstract_content": "set_cookie",
                        "end": {
                            "col": 36,
                            "line": 222,
                            "offset": 7736
                        },
                        "start": {
                            "col": 26,
                            "line": 222,
                            "offset": 7726
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 99,
                "line": 222,
                "offset": 7799
            }
        },
        {
            "check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
            "end": {
                "col": 38,
                "line": 232,
                "offset": 8283
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4f2a5ff97ccc997c8069c844e376f16521d81bf08c13b4ed63c4690b85a49fc1ad488f82dbae07e8d35c19fe3d5af692d4ee954200bafb505ed346bd753ff5af_3",
                "is_ignored": false,
                "lines": "    response = HttpResponse(rendered)",
                "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render",
                        "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9481,
                            "rule_id": "PeUZgE",
                            "rule_name": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "rv_id": 834415,
                            "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "version_id": "qkTQnll"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "shortlink": "https://sg.run/EknN",
                    "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 16,
                "line": 232,
                "offset": 8261
            }
        },
        {
            "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
            "end": {
                "col": 33,
                "line": 242,
                "offset": 8661
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "5557f6cc53b7fb0981441a0f365a3335505e7adf2075f4b77d200dbe458796f6ea87caf0e1b71c425f5d1e25470b9c86bfdf4d09071a5b837a7bb2cda1d6d2e5_0",
                "is_ignored": false,
                "lines": "@csrf_exempt\ndef ba(request):\n    if request.user.is_authenticated:\n        return render(request,\"Lab/BrokenAccess/ba.html\")\n    else:\n        return redirect('login')",
                "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-352: Cross-Site Request Forgery (CSRF)"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9469,
                            "rule_id": "v8UnqO",
                            "rule_name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "rv_id": 834404,
                            "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "version_id": "PkTxrAN"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "shortlink": "https://sg.run/rd5e",
                    "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$R": {
                        "abstract_content": "ba",
                        "end": {
                            "col": 7,
                            "line": 238,
                            "offset": 8512
                        },
                        "start": {
                            "col": 5,
                            "line": 238,
                            "offset": 8510
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 1,
                "line": 237,
                "offset": 8493
            }
        },
        {
            "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
            "end": {
                "col": 33,
                "line": 267,
                "offset": 9802
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "124589a21e2c2253f05c3c28629facb74a4c1f467922afbc99137a6495e6efa158897c4b6b64b4743ee2534e4e181f7e6141bb0298f1d51e46c6345000f3d1db_0",
                "is_ignored": false,
                "lines": "@csrf_exempt\ndef ba_lab(request):\n    if request.user.is_authenticated:\n        name = request.POST.get('name')\n        password = request.POST.get('pass')\n        if name:\n\n\n            if request.COOKIES.get('admin') == \"1\":\n                return render(request, 'Lab/BrokenAccess/ba_lab.html', {\"data\":\"Here is your Secret Key :3600\"})\n            elif login.objects.filter(user='admin',password=password):\n                html = render(request, 'Lab/BrokenAccess/ba_lab.html', {\"data\":\"Here is your Secret Key :3600\"})\n                html.set_cookie(\"admin\", \"1\",max_age=200);\n                return html\n            elif login.objects.filter(user=name,password=password):\n                html = render(request, 'Lab/BrokenAccess/ba_lab.html',{\"data\":\"Welcome Jack\"} )\n                html.set_cookie(\"admin\", \"0\",max_age=200);\n                return html\n            else:\n                return render(request, 'Lab/BrokenAccess/ba_lab.html', {\"data\": \"User Not Found\"})\n\n        else:\n            return render(request,'Lab/BrokenAccess/ba_lab.html',{\"data\":\"Please Provide Credentials\"})\n    else:\n        return redirect('login')",
                "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-352: Cross-Site Request Forgery (CSRF)"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9469,
                            "rule_id": "v8UnqO",
                            "rule_name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "rv_id": 834404,
                            "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "version_id": "PkTxrAN"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "shortlink": "https://sg.run/rd5e",
                    "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$R": {
                        "abstract_content": "ba_lab",
                        "end": {
                            "col": 11,
                            "line": 244,
                            "offset": 8685
                        },
                        "start": {
                            "col": 5,
                            "line": 244,
                            "offset": 8679
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 1,
                "line": 243,
                "offset": 8662
            }
        },
        {
            "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
            "end": {
                "col": 33,
                "line": 318,
                "offset": 11518
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "c4bf2b25fd7de9fb8d8d2533119ed96ef58a46c7ab57bc8c41bc466cd92d2e8b2d7f6f96fbc871c196b55c6df743d7e133831a339fd85e7c390574e0a9e77e47_0",
                "is_ignored": false,
                "lines": "@csrf_exempt\ndef cmd_lab(request):\n    if request.user.is_authenticated:\n        if(request.method==\"POST\"):\n            domain=request.POST.get('domain')\n            domain=domain.replace(\"https://www.\",'')\n            os=request.POST.get('os')\n            print(os)\n            if(os=='win'):\n                command=\"nslookup {}\".format(domain)\n            else:\n                command = \"dig {}\".format(domain)\n\n            output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\");\n            print(output)\n            return render(request,'Lab/CMD/cmd_lab.html',{\"output\":output})\n        else:\n            return render(request, 'Lab/CMD/cmd_lab.html')\n    else:\n        return redirect('login')",
                "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-352: Cross-Site Request Forgery (CSRF)"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9469,
                            "rule_id": "v8UnqO",
                            "rule_name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "rv_id": 834404,
                            "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "version_id": "PkTxrAN"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "shortlink": "https://sg.run/rd5e",
                    "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$R": {
                        "abstract_content": "cmd_lab",
                        "end": {
                            "col": 12,
                            "line": 300,
                            "offset": 10827
                        },
                        "start": {
                            "col": 5,
                            "line": 300,
                            "offset": 10820
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 1,
                "line": 299,
                "offset": 10803
            }
        },
        {
            "check_id": "python.django.security.injection.command.subprocess-injection.subprocess-injection",
            "end": {
                "col": 80,
                "line": 312,
                "offset": 11299
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "request",
                            "location": {
                                "end": {
                                    "col": 20,
                                    "line": 300,
                                    "offset": 10835
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 13,
                                    "line": 300,
                                    "offset": 10828
                                }
                            }
                        },
                        {
                            "content": "domain",
                            "location": {
                                "end": {
                                    "col": 19,
                                    "line": 303,
                                    "offset": 10930
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 13,
                                    "line": 303,
                                    "offset": 10924
                                }
                            }
                        },
                        {
                            "content": "command",
                            "location": {
                                "end": {
                                    "col": 24,
                                    "line": 310,
                                    "offset": 11192
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 17,
                                    "line": 310,
                                    "offset": 11185
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 80,
                                    "line": 312,
                                    "offset": 11299
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 20,
                                    "line": 312,
                                    "offset": 11239
                                }
                            },
                            "subprocess.check_output(command,shell=True,encoding=\"UTF-8\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 20,
                                    "line": 300,
                                    "offset": 10835
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 13,
                                    "line": 300,
                                    "offset": 10828
                                }
                            },
                            "request"
                        ]
                    ]
                },
                "engine_kind": "PRO",
                "fingerprint": "2e6795083063bef4990c652abeff0ee16c59760d216ee4b4d01860015a6491fa21a2e524bc0d161ed1752f76aa78a34ebfee6395c2d783873c0655d4249015f3_0",
                "is_ignored": false,
                "lines": "            output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\");",
                "message": "Detected user input entering a `subprocess` call unsafely. This could result in a command injection vulnerability. An attacker could use this vulnerability to execute arbitrary commands on the host, which allows them to download malware, scan sensitive data, or run any command they wish on the server. Do not let users choose the command to run. In general, prefer to use Python API versions of system commands. If you must use subprocess, use a dictionary to allowlist a set of commands.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 31144,
                            "rule_id": "EwUepx",
                            "rule_name": "python.django.security.injection.command.subprocess-injection.subprocess-injection",
                            "rv_id": 834437,
                            "url": "https://semgrep.dev/playground/r/d6TKgwn/python.django.security.injection.command.subprocess-injection.subprocess-injection",
                            "version_id": "d6TKgwn"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.injection.command.subprocess-injection.subprocess-injection",
                    "shortlink": "https://sg.run/49BE",
                    "source": "https://semgrep.dev/r/python.django.security.injection.command.subprocess-injection.subprocess-injection",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "flask"
                    ],
                    "vulnerability_class": [
                        "Command Injection"
                    ]
                },
                "metavars": {
                    "$FUNC": {
                        "abstract_content": "cmd_lab",
                        "end": {
                            "col": 12,
                            "line": 300,
                            "offset": 10827
                        },
                        "start": {
                            "col": 5,
                            "line": 300,
                            "offset": 10820
                        }
                    },
                    "$REQUEST": {
                        "abstract_content": "request",
                        "end": {
                            "col": 20,
                            "line": 300,
                            "offset": 10835
                        },
                        "start": {
                            "col": 13,
                            "line": 300,
                            "offset": 10828
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 20,
                "line": 312,
                "offset": 11239
            }
        },
        {
            "check_id": "python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
            "end": {
                "col": 51,
                "line": 312,
                "offset": 11270
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "domain",
                            "location": {
                                "end": {
                                    "col": 19,
                                    "line": 303,
                                    "offset": 10930
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 13,
                                    "line": 303,
                                    "offset": 10924
                                }
                            }
                        },
                        {
                            "content": "command",
                            "location": {
                                "end": {
                                    "col": 24,
                                    "line": 310,
                                    "offset": 11192
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 17,
                                    "line": 310,
                                    "offset": 11185
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 51,
                                    "line": 312,
                                    "offset": 11270
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 44,
                                    "line": 312,
                                    "offset": 11263
                                }
                            },
                            "command"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 46,
                                    "line": 303,
                                    "offset": 10957
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 20,
                                    "line": 303,
                                    "offset": 10931
                                }
                            },
                            "request.POST.get('domain')"
                        ]
                    ]
                },
                "engine_kind": "PRO",
                "fingerprint": "c256a7b6c3f38a0f13a262d35062d12bbe3d897a65f1ce53c99685191048cedc2ba2041332ec652f1ad4bd94daad93da915f43b5f2c0fc0ce2c8409f8c0762c2_0",
                "is_ignored": false,
                "lines": "            output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\");",
                "message": "Detected subprocess function 'cmd_lab' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.",
                "metadata": {
                    "asvs": {
                        "control_id": "5.3.8 OS Command Injection",
                        "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
                        "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
                        "version": "4"
                    },
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
                        "https://docs.python.org/3/library/subprocess.html",
                        "https://docs.python.org/3/library/shlex.html",
                        "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 27271,
                            "rule_id": "JDUz3R",
                            "rule_name": "python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
                            "rv_id": 834659,
                            "url": "https://semgrep.dev/playground/r/0bTw3E0/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
                            "version_id": "0bTw3E0"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
                    "shortlink": "https://sg.run/NWxp",
                    "source": "https://semgrep.dev/r/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Command Injection"
                    ]
                },
                "metavars": {
                    "$CMD": {
                        "abstract_content": "command",
                        "end": {
                            "col": 51,
                            "line": 312,
                            "offset": 11270
                        },
                        "start": {
                            "col": 44,
                            "line": 312,
                            "offset": 11263
                        }
                    },
                    "$FUNC": {
                        "abstract_content": "cmd_lab",
                        "end": {
                            "col": 12,
                            "line": 300,
                            "offset": 10827
                        },
                        "start": {
                            "col": 5,
                            "line": 300,
                            "offset": 10820
                        }
                    },
                    "$PROPERTY": {
                        "abstract_content": "POST",
                        "end": {
                            "col": 32,
                            "line": 303,
                            "offset": 10943
                        },
                        "start": {
                            "col": 28,
                            "line": 303,
                            "offset": 10939
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 44,
                "line": 312,
                "offset": 11263
            }
        },
        {
            "check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
            "end": {
                "col": 62,
                "line": 312,
                "offset": 11281
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "bf0f040d232903aac411830d135d2f954b697be5b7b2bf8c3e2257bf4c06de18f598b72213a9799db8e06fb26e55f2ea74e505a1cb6cae7b9d49cb9937e8d08b_0",
                "fix": "False",
                "is_ignored": false,
                "lines": "            output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\");",
                "message": "Found 'subprocess' function 'check_output' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "HIGH",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
                        "https://docs.python.org/3/library/subprocess.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9646,
                            "rule_id": "DbUpz2",
                            "rule_name": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                            "rv_id": 834650,
                            "url": "https://semgrep.dev/playground/r/PkTxGkR/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                            "version_id": "PkTxGkR"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                    "shortlink": "https://sg.run/J92w",
                    "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                    "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
                    "subcategory": [
                        "secure default"
                    ],
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Command Injection"
                    ]
                },
                "metavars": {
                    "$FUNC": {
                        "abstract_content": "check_output",
                        "end": {
                            "col": 43,
                            "line": 312,
                            "offset": 11262
                        },
                        "start": {
                            "col": 31,
                            "line": 312,
                            "offset": 11250
                        }
                    },
                    "$TRUE": {
                        "abstract_content": "True",
                        "end": {
                            "col": 62,
                            "line": 312,
                            "offset": 11281
                        },
                        "start": {
                            "col": 58,
                            "line": 312,
                            "offset": 11277
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 58,
                "line": 312,
                "offset": 11277
            }
        },
        {
            "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
            "end": {
                "col": 100,
                "line": 365,
                "offset": 13302
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "3978836bc13e9aeaff460200494bd999d34690c1d99bf824f4180d112bd340cf894de663c07e63f3063f71386e8141a805acac14252eb7c47ae1aeb075331405_0",
                "is_ignored": false,
                "lines": "@csrf_exempt\ndef Otp(request):\n    if request.method==\"GET\":\n        email=request.GET.get('email');\n        otpN=randint(100,999)\n        if email and otpN:\n            if email==\"admin@pygoat.com\":\n                otp.objects.filter(id=2).update(otp=otpN)\n                html = render(request, \"Lab/BrokenAuth/otp.html\", {\"otp\":\"Sent To Admin Mail ID\"})\n                html.set_cookie(\"email\", email);\n                return html\n\n            else:\n                otp.objects.filter(id=1).update(email=email, otp=otpN)\n                html=render (request,\"Lab/BrokenAuth/otp.html\",{\"otp\":otpN})\n                html.set_cookie(\"email\",email);\n                return html;\n        else:\n            return render(request,\"Lab/BrokenAuth/otp.html\")\n    else:\n        otpR=request.POST.get(\"otp\")\n        email=request.COOKIES.get(\"email\")\n        if otp.objects.filter(email=email,otp=otpR) or otp.objects.filter(id=2,otp=otpR):\n            return HttpResponse(\"<h3>Login Success for email:::\"+email+\"</h3>\")\n        else:\n            return render(request,\"Lab/BrokenAuth/otp.html\",{\"otp\":\"Invalid OTP Please Try Again\"})",
                "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-352: Cross-Site Request Forgery (CSRF)"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9469,
                            "rule_id": "v8UnqO",
                            "rule_name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "rv_id": 834404,
                            "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "version_id": "PkTxrAN"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "shortlink": "https://sg.run/rd5e",
                    "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$R": {
                        "abstract_content": "Otp",
                        "end": {
                            "col": 8,
                            "line": 341,
                            "offset": 12196
                        },
                        "start": {
                            "col": 5,
                            "line": 341,
                            "offset": 12193
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 1,
                "line": 340,
                "offset": 12176
            }
        },
        {
            "check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
            "end": {
                "col": 80,
                "line": 363,
                "offset": 13188
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "4f2a5ff97ccc997c8069c844e376f16521d81bf08c13b4ed63c4690b85a49fc1ad488f82dbae07e8d35c19fe3d5af692d4ee954200bafb505ed346bd753ff5af_4",
                "is_ignored": false,
                "lines": "            return HttpResponse(\"<h3>Login Success for email:::\"+email+\"</h3>\")",
                "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render",
                        "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9481,
                            "rule_id": "PeUZgE",
                            "rule_name": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "rv_id": 834415,
                            "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                            "version_id": "qkTQnll"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "shortlink": "https://sg.run/EknN",
                    "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 20,
                "line": 363,
                "offset": 13128
            }
        },
        {
            "check_id": "python.django.security.injection.raw-html-format.raw-html-format",
            "end": {
                "col": 79,
                "line": 363,
                "offset": 13187
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "email",
                            "location": {
                                "end": {
                                    "col": 14,
                                    "line": 361,
                                    "offset": 12989
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 9,
                                    "line": 361,
                                    "offset": 12984
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 79,
                                    "line": 363,
                                    "offset": 13187
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 33,
                                    "line": 363,
                                    "offset": 13141
                                }
                            },
                            "\"<h3>Login Success for email:::\"+email+\"</h3>\""
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 30,
                                    "line": 361,
                                    "offset": 13005
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 15,
                                    "line": 361,
                                    "offset": 12990
                                }
                            },
                            "request.COOKIES"
                        ]
                    ]
                },
                "engine_kind": "PRO",
                "fingerprint": "39b0e21f5a909ecc3ed04be024a46785aca9bf221ae459e00624044c4e2f9a4c8fba8f4b6f930be3d091569731b39052aa4940ad9f707495f6224816795425de_0",
                "is_ignored": false,
                "lines": "            return HttpResponse(\"<h3>Login Success for email:::\"+email+\"</h3>\")",
                "message": "Detected user input flowing into a manually constructed HTML string. You may be accidentally bypassing secure methods of rendering HTML by manually constructing HTML and this could create a cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure this is safe, check that the HTML is rendered safely. Otherwise, use templates (`django.shortcuts.render`) which will safely render HTML instead.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "HIGH",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/#render",
                        "https://docs.djangoproject.com/en/3.2/topics/security/#cross-site-scripting-xss-protection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 14360,
                            "rule_id": "2ZUPER",
                            "rule_name": "python.django.security.injection.raw-html-format.raw-html-format",
                            "rv_id": 834446,
                            "url": "https://semgrep.dev/playground/r/3ZT3wYq/python.django.security.injection.raw-html-format.raw-html-format",
                            "version_id": "3ZT3wYq"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.injection.raw-html-format.raw-html-format",
                    "shortlink": "https://sg.run/oYj1",
                    "source": "https://semgrep.dev/r/python.django.security.injection.raw-html-format.raw-html-format",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$ANYTHING": {
                        "abstract_content": "COOKIES",
                        "end": {
                            "col": 30,
                            "line": 361,
                            "offset": 13005
                        },
                        "start": {
                            "col": 23,
                            "line": 361,
                            "offset": 12998
                        }
                    },
                    "$HTMLSTR": {
                        "abstract_content": "<h3>Login Success for email:::",
                        "end": {
                            "col": 64,
                            "line": 363,
                            "offset": 13172
                        },
                        "start": {
                            "col": 34,
                            "line": 363,
                            "offset": 13142
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 33,
                "line": 363,
                "offset": 13141
            }
        },
        {
            "check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
            "end": {
                "col": 33,
                "line": 415,
                "offset": 15017
            },
            "extra": {
                "engine_kind": "PRO",
                "fingerprint": "68c9cebdf99ec96013fce9e22d298ddeb7f054d2762a961bcf85d6c53922932be0bc3ac369e093f1bf75aaed0d28d4547483ebd0aa8e630ef0e3791b9b17c8da_0",
                "is_ignored": false,
                "lines": "@csrf_exempt\ndef a9_lab(request):\n    if request.user.is_authenticated:\n        if request.method==\"GET\":\n            return render(request,\"Lab/A9/a9_lab.html\")\n        else:\n\n            try :\n                file=request.FILES[\"file\"]\n                try :\n                    data = yaml.load(file)\n                    return render(request,\"Lab/A9/a9_lab.html\",{\"data\":data})\n                except:\n                    return render(request, \"Lab/A9/a9_lab.html\", {\"data\": \"Error\"})\n\n            except:\n                return render(request, \"Lab/A9/a9_lab.html\", {\"data\":\"Please Upload a Yaml file.\"})\n    else:\n        return redirect('login')",
                "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-352: Cross-Site Request Forgery (CSRF)"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9469,
                            "rule_id": "v8UnqO",
                            "rule_name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "rv_id": 834404,
                            "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "version_id": "PkTxrAN"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "shortlink": "https://sg.run/rd5e",
                    "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$R": {
                        "abstract_content": "a9_lab",
                        "end": {
                            "col": 11,
                            "line": 398,
                            "offset": 14388
                        },
                        "start": {
                            "col": 5,
                            "line": 398,
                            "offset": 14382
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 1,
                "line": 397,
                "offset": 14365
            }
        },
        {
            "check_id": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
            "end": {
                "col": 43,
                "line": 407,
                "offset": 14667
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "file",
                            "location": {
                                "end": {
                                    "col": 21,
                                    "line": 405,
                                    "offset": 14580
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 17,
                                    "line": 405,
                                    "offset": 14576
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 43,
                                    "line": 407,
                                    "offset": 14667
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 28,
                                    "line": 407,
                                    "offset": 14652
                                }
                            },
                            "yaml.load(file)"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 43,
                                    "line": 405,
                                    "offset": 14602
                                },
                                "path": "pygoat/introduction/views.py",
                                "start": {
                                    "col": 22,
                                    "line": 405,
                                    "offset": 14581
                                }
                            },
                            "request.FILES[\"file\"]"
                        ]
                    ]
                },
                "engine_kind": "PRO",
                "fingerprint": "951526e8ae8a100221e7f6da5eecb69358b21dabbe55d12c834586b184267626f698257c77f4fb881694be85b46763fd7731ae24be83f5c88b430156ee1f02e5_0",
                "is_ignored": false,
                "lines": "                    data = yaml.load(file)",
                "message": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-502: Deserialization of Untrusted Data"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "dev.semgrep.actions": [
                        "monitor"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A08:2017 - Insecure Deserialization",
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://docs.python.org/3/library/pickle.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9467,
                            "rule_id": "OrU3e6",
                            "rule_name": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                            "rv_id": 834402,
                            "url": "https://semgrep.dev/playground/r/3ZT3A9q/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                            "version_id": "3ZT3A9q"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.policy": {
                        "id": 148163,
                        "name": "Rule Board - Audit column",
                        "slug": "rule-board-audit"
                    },
                    "semgrep.ruleset": "default",
                    "semgrep.ruleset_id": 3471,
                    "semgrep.url": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                    "shortlink": "https://sg.run/9oyr",
                    "source": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Insecure Deserialization "
                    ]
                },
                "metavars": {
                    "$INSIDE": {
                        "abstract_content": "a9_lab",
                        "end": {
                            "col": 11,
                            "line": 398,
                            "offset": 14388
                        },
                        "start": {
                            "col": 5,
                            "line": 398,
                            "offset": 14382
                        }
                    },
                    "$PARAM": {
                        "abstract_content": "request",
                        "end": {
                            "col": 19,
                            "line": 398,
                            "offset": 14396
                        },
                        "start": {
                            "col": 12,
                            "line": 398,
                            "offset": 14389
                        }
                    },
                    "$REQFUNC": {
                        "abstract_content": "FILES",
                        "end": {
                            "col": 35,
                            "line": 405,
                            "offset": 14594
                        },
                        "start": {
                            "col": 30,
                            "line": 405,
                            "offset": 14589
                        }
                    },
                    "$YAMLFUNC": {
                        "abstract_content": "load",
                        "end": {
                            "col": 37,
                            "line": 407,
                            "offset": 14661
                        },
                        "start": {
                            "col": 33,
                            "line": 407,
                            "offset": 14657
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pygoat/introduction/views.py",
            "start": {
                "col": 28,
                "line": 407,
                "offset": 14652
            }
        },
        {
            "check_id": "ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "53da8b1d5372651ee000c8c359b56d9cdbc5aa1cf87caf89dc9e8af476132a15bc6311148912e6b103826ca65a1f2ec89626f23a2085826a96bd0e73109c999d_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Django versions >= 3.0.0 before 3.1.13, >= 3.2.0 before 3.2.5 are vulnerable to Improper Neutralization Of Special Elements Used In An Sql Command ('Sql Injection'). In the specified versions, the `QuerySet.order_by` method can be exploited by a remote, authenticated attacker to execute an SQL injection. This vulnerability arises due to unsanitized user input being passed to the method. Notably, the vulnerability remains active even in the presence of deprecation warnings, allowing for the bypassing of column reference checks.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cve": "CVE-2021-35042",
                    "cwe": [
                        "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-xpfp-f569-q3p2",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection",
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2021-09-22T17:34:49Z",
                    "references": [
                        "https://github.com/advisories/GHSA-xpfp-f569-q3p2",
                        "https://nvd.nist.gov/vuln/detail/CVE-2021-35042"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "3.2.5"
                        },
                        {
                            "django": "3.1.13"
                        }
                    ],
                    "sca-kind": "reachable",
                    "sca-schema": 20230302,
                    "sca-severity": "CRITICAL",
                    "sca-vuln-database-identifier": "CVE-2021-35042",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 95549,
                            "rule_id": "GdUv0q5",
                            "rule_name": "ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                            "rv_id": 926296,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                            "version_id": "NdTelQX"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "SQL Injection"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": ">=3.0a1, <3.1.13"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "pygoat/requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "pygoat/requirements.txt"
                    },
                    "reachability_rule": true,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "ERROR"
            },
            "path": "pygoat/requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4f1be3a5ec9ac1c1b64dc210f186a31f8479df64aab5c9f20d6851956f301f32e05bfadd31eafae23aaf029dd0df0ca648dd3848a91c6d16e0421c61eae49f25_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Django after 4.0 and before 4.0.7, and Django after 3.2 before 3.2.15 are vulnerable to a reflected file download. When `filename` is derived from user-supplied input, the Content-Disposition header of a FileResponse can be set. This can be mitigated by sanitizing inputs to the `filename` argument using the filter specified in Django's security patch: https://github.com/django/django/commit/bd062445cffd3f6cc6dcd20d13e2abed818fa173#diff-ab65c832cdbc45bbac4b1754d569d8f0f353d2ac97b82898b7ec23066cce212bR578",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cve": "CVE-2022-36359",
                    "cwe": [
                        "CWE-494: Download of Code Without Integrity Check"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-8x94-hmjh-97hq",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components",
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "publish-date": "2022-08-11T14:49:12Z",
                    "references": [
                        "https://github.com/advisories/GHSA-8x94-hmjh-97hq",
                        "https://nvd.nist.gov/vuln/detail/CVE-2022-36359"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "4.0.7"
                        },
                        {
                            "django": "3.2.15"
                        }
                    ],
                    "sca-kind": "reachable",
                    "sca-reachable-if": "you do not sanitize input to the `filename` argument using the filter specified in Django's security patch (see refs)",
                    "sca-schema": 20230302,
                    "sca-severity": "HIGH",
                    "sca-vuln-database-identifier": "CVE-2022-36359",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 95333,
                            "rule_id": "5rUd4Nj",
                            "rule_name": "ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                            "rv_id": 926239,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                            "version_id": "NdTelJ8"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": "<3.2.15"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "pygoat/requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "pygoat/requirements.txt"
                    },
                    "reachability_rule": true,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "ERROR"
            },
            "path": "pygoat/requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "70eebaf052f2061b6c499efc873678ec3e2957b17704441e79612f630dcbe1d53a17ae4b7be35e38992f59203d41640aa07576aa437d3a1c3ad8102cc1240331_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Affected versions of Django are vulnerable to Improper Authentication.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2021-44420",
                    "cwe": [
                        "CWE-287: Improper Authentication"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-v6rh-hp5x-86rv",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A02:2017 - Broken Authentication",
                        "A06:2021 - Vulnerable and Outdated Components",
                        "A07:2021 - Identification and Authentication Failures"
                    ],
                    "publish-date": "2021-12-09T19:09:37Z",
                    "references": [
                        "https://github.com/advisories/GHSA-v6rh-hp5x-86rv",
                        "https://nvd.nist.gov/vuln/detail/CVE-2021-44420"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "3.2.10"
                        },
                        {
                            "django": "3.1.14"
                        },
                        {
                            "django": "2.2.25"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "HIGH",
                    "sca-vuln-database-identifier": "CVE-2021-44420",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 101370,
                            "rule_id": "yyURAOj",
                            "rule_name": "ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                            "rv_id": 926736,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                            "version_id": "2KTdqyL"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Improper Authentication"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": ">=3.0a1, <3.1.14"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "pygoat/requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "pygoat/requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "pygoat/requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f7fb5c6ab173e798ee3b04e9bd726e8ff6208212cbfb776e962496823d909b4e99b47c577012d41fd3460a851348a62272c19065298e1749962c5962378b7b40_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Affected versions of Django are vulnerable to Observable Discrepancy / Observable Response Discrepancy.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2024-45231",
                    "cwe": [
                        "CWE-203: Observable Discrepancy",
                        "CWE-204: Observable Response Discrepancy"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-rrqc-c2jx-6jgv",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2024-10-08T18:33:13Z",
                    "references": [
                        "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv",
                        "https://nvd.nist.gov/vuln/detail/CVE-2024-45231"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "5.1.1"
                        },
                        {
                            "django": "5.0.9"
                        },
                        {
                            "django": "4.2.16"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "MODERATE",
                    "sca-vuln-database-identifier": "CVE-2024-45231",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 144661,
                            "rule_id": "x8UKP67",
                            "rule_name": "ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                            "rv_id": 927112,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                            "version_id": "ZRTerro"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": "<4.2.16"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "pygoat/requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "pygoat/requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "pygoat/requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
            "end": {
                "col": 1,
                "line": 4,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a8ee5d8ee9800f68b39cf970e612a180ede0962b2aec69974bc48ee3e4dd4c186cf95b7772517bc26c39628c1d80e8a9329bca4d2b60697d48cddaca2717f30b_0",
                "is_ignored": false,
                "lines": "sqlparse==0.3.1",
                "message": "Affected versions of sqlparse are vulnerable to Uncontrolled Recursion. The vulnerability arises when a nested list is passed to `sqlparse.parse()`, resulting in a denial-of-service (DoS) scenario due to a recursion error.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cve": "CVE-2024-4340",
                    "cwe": [
                        "CWE-674: Uncontrolled Recursion"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-2m57-hf25-phgg",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2024-04-15T20:21:25Z",
                    "references": [
                        "https://github.com/advisories/GHSA-2m57-hf25-phgg",
                        "https://nvd.nist.gov/vuln/detail/CVE-2024-4340"
                    ],
                    "sca-fix-versions": [
                        {
                            "sqlparse": "0.5.0"
                        }
                    ],
                    "sca-kind": "reachable",
                    "sca-schema": 20230302,
                    "sca-severity": "HIGH",
                    "sca-vuln-database-identifier": "CVE-2024-4340",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 128373,
                            "rule_id": "5rUdxe0",
                            "rule_name": "ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                            "rv_id": 922943,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                            "version_id": "BjTKZR2"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "sqlparse",
                            "semver_range": "<0.5.0"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 4,
                            "lockfile_path": "pygoat/requirements.txt",
                            "package": "sqlparse",
                            "transitivity": "unknown",
                            "version": "0.3.1"
                        },
                        "lockfile": "pygoat/requirements.txt"
                    },
                    "reachability_rule": true,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "ERROR"
            },
            "path": "pygoat/requirements.txt",
            "start": {
                "col": 1,
                "line": 4,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
            "end": {
                "col": 1,
                "line": 4,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "8be8d2547e82c6b665eb96f27f7554b44032844241bc90786061024b521fa37cfc88475d91db542f2de45e798cdcf2afddf139c900fd12338b5a7f9a1357344c_0",
                "is_ignored": false,
                "lines": "sqlparse==0.3.1",
                "message": "Affected versions of sqlparse are vulnerable to Inefficient Regular Expression Complexity.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2023-30608",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-rrm6-wvj7-cwh2",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2023-04-21T20:24:21Z",
                    "references": [
                        "https://github.com/advisories/GHSA-rrm6-wvj7-cwh2",
                        "https://nvd.nist.gov/vuln/detail/CVE-2023-30608"
                    ],
                    "sca-fix-versions": [
                        {
                            "sqlparse": "0.4.4"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "MODERATE",
                    "sca-vuln-database-identifier": "CVE-2023-30608",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 109419,
                            "rule_id": "EwUjNbW",
                            "rule_name": "ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                            "rv_id": 896002,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                            "version_id": "vdTvJQe"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "sqlparse",
                            "semver_range": ">=0.1.15, <0.4.4"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 4,
                            "lockfile_path": "pygoat/requirements.txt",
                            "package": "sqlparse",
                            "transitivity": "unknown",
                            "version": "0.3.1"
                        },
                        "lockfile": "pygoat/requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "pygoat/requirements.txt",
            "start": {
                "col": 1,
                "line": 4,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "6be284240dae9fb76799822fdc89f40db7d69ced3c6277cdc0e9cf12b6a4a9788f76326d6aedeecabf18a82012f6bcbee1aaf3172da4603001dd231f8b113173_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Django versions >= 3.0.0 before 3.1.13, >= 3.2.0 before 3.2.5 are vulnerable to Improper Neutralization Of Special Elements Used In An Sql Command ('Sql Injection'). In the specified versions, the `QuerySet.order_by` method can be exploited by a remote, authenticated attacker to execute an SQL injection. This vulnerability arises due to unsanitized user input being passed to the method. Notably, the vulnerability remains active even in the presence of deprecation warnings, allowing for the bypassing of column reference checks.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cve": "CVE-2021-35042",
                    "cwe": [
                        "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-xpfp-f569-q3p2",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection",
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2021-09-22T17:34:49Z",
                    "references": [
                        "https://github.com/advisories/GHSA-xpfp-f569-q3p2",
                        "https://nvd.nist.gov/vuln/detail/CVE-2021-35042"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "3.2.5"
                        },
                        {
                            "django": "3.1.13"
                        }
                    ],
                    "sca-kind": "reachable",
                    "sca-schema": 20230302,
                    "sca-severity": "CRITICAL",
                    "sca-vuln-database-identifier": "CVE-2021-35042",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 95549,
                            "rule_id": "GdUv0q5",
                            "rule_name": "ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                            "rv_id": 926296,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                            "version_id": "NdTelQX"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-2b52506e-ff6e-4341-840c-5d9c5c90730b",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "SQL Injection"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": ">=3.0a1, <3.1.13"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": true,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "ERROR"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f40c3e8a14bf04085ce5b4d6ca22f3c0440d961a87ea2c32308a28fdde9c87e4938345f5938629cfab9ef74697b6aa5dd6cd7d3cc9b3a0aa5f49477ce53d2e1e_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Django after 4.0 and before 4.0.7, and Django after 3.2 before 3.2.15 are vulnerable to a reflected file download. When `filename` is derived from user-supplied input, the Content-Disposition header of a FileResponse can be set. This can be mitigated by sanitizing inputs to the `filename` argument using the filter specified in Django's security patch: https://github.com/django/django/commit/bd062445cffd3f6cc6dcd20d13e2abed818fa173#diff-ab65c832cdbc45bbac4b1754d569d8f0f353d2ac97b82898b7ec23066cce212bR578",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cve": "CVE-2022-36359",
                    "cwe": [
                        "CWE-494: Download of Code Without Integrity Check"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-8x94-hmjh-97hq",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components",
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "publish-date": "2022-08-11T14:49:12Z",
                    "references": [
                        "https://github.com/advisories/GHSA-8x94-hmjh-97hq",
                        "https://nvd.nist.gov/vuln/detail/CVE-2022-36359"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "4.0.7"
                        },
                        {
                            "django": "3.2.15"
                        }
                    ],
                    "sca-kind": "reachable",
                    "sca-reachable-if": "you do not sanitize input to the `filename` argument using the filter specified in Django's security patch (see refs)",
                    "sca-schema": 20230302,
                    "sca-severity": "HIGH",
                    "sca-vuln-database-identifier": "CVE-2022-36359",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 95333,
                            "rule_id": "5rUd4Nj",
                            "rule_name": "ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                            "rv_id": 926239,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                            "version_id": "NdTelJ8"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-5e6e125a-6d3f-468c-8f53-cb7acfd8009c",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": "<3.2.15"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": true,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "ERROR"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0a8c7669c9fae6df79c489157aa0df152da2f68fa1a0f090a33013e0092c779e50fc5db4304323d38aae537c57a4ce9c256f820a6ba9df56aed36dcdabc73e8c_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Affected versions of Django are vulnerable to Improper Authentication.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2021-44420",
                    "cwe": [
                        "CWE-287: Improper Authentication"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-v6rh-hp5x-86rv",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A02:2017 - Broken Authentication",
                        "A06:2021 - Vulnerable and Outdated Components",
                        "A07:2021 - Identification and Authentication Failures"
                    ],
                    "publish-date": "2021-12-09T19:09:37Z",
                    "references": [
                        "https://github.com/advisories/GHSA-v6rh-hp5x-86rv",
                        "https://nvd.nist.gov/vuln/detail/CVE-2021-44420"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "3.2.10"
                        },
                        {
                            "django": "3.1.14"
                        },
                        {
                            "django": "2.2.25"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "HIGH",
                    "sca-vuln-database-identifier": "CVE-2021-44420",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 101370,
                            "rule_id": "yyURAOj",
                            "rule_name": "ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                            "rv_id": 926736,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                            "version_id": "2KTdqyL"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-7bb8a24357cb51eb43f8bfe808fb07decde34cf6",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Improper Authentication"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": ">=3.0a1, <3.1.14"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
            "end": {
                "col": 1,
                "line": 2,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "8d88a9624455efee6cbe51ba9c8b1cb2ecf9cdb8cdf847708689f87c28f944de007d60420bd01d1d42f1b8894814af3e4113fbbbde9fdc8c3c08005621598461_0",
                "is_ignored": false,
                "lines": "Django==3.1.12",
                "message": "Affected versions of Django are vulnerable to Observable Discrepancy / Observable Response Discrepancy.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2024-45231",
                    "cwe": [
                        "CWE-203: Observable Discrepancy",
                        "CWE-204: Observable Response Discrepancy"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-rrqc-c2jx-6jgv",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2024-10-08T18:33:13Z",
                    "references": [
                        "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv",
                        "https://nvd.nist.gov/vuln/detail/CVE-2024-45231"
                    ],
                    "sca-fix-versions": [
                        {
                            "django": "5.1.1"
                        },
                        {
                            "django": "5.0.9"
                        },
                        {
                            "django": "4.2.16"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "MODERATE",
                    "sca-vuln-database-identifier": "CVE-2024-45231",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 144661,
                            "rule_id": "x8UKP67",
                            "rule_name": "ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                            "rv_id": 927112,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                            "version_id": "ZRTerro"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e682490bc46de6e64ba1c141666da07b6307a54c",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "django",
                            "semver_range": "<4.2.16"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 2,
                            "lockfile_path": "requirements.txt",
                            "package": "django",
                            "transitivity": "unknown",
                            "version": "3.1.12"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 2,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
            "end": {
                "col": 1,
                "line": 4,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "668a4928d5b518e1be8134e882d9b9c2c16da299fec93eabbcbd4557d5003db23b7143422e8ab91916bbbe5f409145686837eade7cd866dbcc3e530dde6d6808_0",
                "is_ignored": false,
                "lines": "sqlparse==0.3.1",
                "message": "Affected versions of sqlparse are vulnerable to Uncontrolled Recursion. The vulnerability arises when a nested list is passed to `sqlparse.parse()`, resulting in a denial-of-service (DoS) scenario due to a recursion error.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cve": "CVE-2024-4340",
                    "cwe": [
                        "CWE-674: Uncontrolled Recursion"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-2m57-hf25-phgg",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2024-04-15T20:21:25Z",
                    "references": [
                        "https://github.com/advisories/GHSA-2m57-hf25-phgg",
                        "https://nvd.nist.gov/vuln/detail/CVE-2024-4340"
                    ],
                    "sca-fix-versions": [
                        {
                            "sqlparse": "0.5.0"
                        }
                    ],
                    "sca-kind": "reachable",
                    "sca-schema": 20230302,
                    "sca-severity": "HIGH",
                    "sca-vuln-database-identifier": "CVE-2024-4340",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 128373,
                            "rule_id": "5rUdxe0",
                            "rule_name": "ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                            "rv_id": 922943,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                            "version_id": "BjTKZR2"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-681d32fd-3c1d-d701-317c-8ece7edb9919",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "sqlparse",
                            "semver_range": "<0.5.0"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 4,
                            "lockfile_path": "requirements.txt",
                            "package": "sqlparse",
                            "transitivity": "unknown",
                            "version": "0.3.1"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": true,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "ERROR"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 4,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
            "end": {
                "col": 1,
                "line": 4,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9a6e8eeae9085ede82172763d3761dccbacf2a98b3b17f60d358e7b526e45501f03b7a429a7b6436b556cb61512ef8543f10638fb608777499582065b9e5aa3e_0",
                "is_ignored": false,
                "lines": "sqlparse==0.3.1",
                "message": "Affected versions of sqlparse are vulnerable to Inefficient Regular Expression Complexity.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2023-30608",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-rrm6-wvj7-cwh2",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2023-04-21T20:24:21Z",
                    "references": [
                        "https://github.com/advisories/GHSA-rrm6-wvj7-cwh2",
                        "https://nvd.nist.gov/vuln/detail/CVE-2023-30608"
                    ],
                    "sca-fix-versions": [
                        {
                            "sqlparse": "0.4.4"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "MODERATE",
                    "sca-vuln-database-identifier": "CVE-2023-30608",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 109419,
                            "rule_id": "EwUjNbW",
                            "rule_name": "ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                            "rv_id": 896002,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                            "version_id": "vdTvJQe"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-d3d517bbfdb94e3e03e14f9440a10c2911eb2abd",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "sqlparse",
                            "semver_range": ">=0.1.15, <0.4.4"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 4,
                            "lockfile_path": "requirements.txt",
                            "package": "sqlparse",
                            "transitivity": "unknown",
                            "version": "0.3.1"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 4,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-380b81d3-276b-4042-a0ea-ef22522833e4",
            "end": {
                "col": 1,
                "line": 14,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9b48722228937cffbdd283fb8dddbf8da304e3e678e6d3410f95063ca1d787ef28b9b6dca452bfa614b89ee3f6ba3a85d4a06c3e5d03654f2fa791e03ad06fc4_0",
                "is_ignored": false,
                "lines": "urllib3==1.25.9",
                "message": "urllib3 1.x before 1.26.5 is vulnerable to uncontrolled resource consumption. Upgrade to urllib3 1.26.5.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cve": "CVE-2021-33503",
                    "cwe": [
                        "CWE-400: Uncontrolled Resource Consumption"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-q2q7-5pp4-w6pg",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2021-06-01T21:19:32Z",
                    "references": [
                        "https://github.com/advisories/GHSA-q2q7-5pp4-w6pg",
                        "https://nvd.nist.gov/vuln/detail/CVE-2021-33503"
                    ],
                    "sca-fix-versions": [
                        {
                            "urllib3": "1.26.5"
                        }
                    ],
                    "sca-kind": "reachable",
                    "sca-schema": 20230302,
                    "sca-severity": "HIGH",
                    "sca-vuln-database-identifier": "CVE-2021-33503",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 95202,
                            "rule_id": "zdUKyYo",
                            "rule_name": "ssc-380b81d3-276b-4042-a0ea-ef22522833e4",
                            "rv_id": 878596,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-380b81d3-276b-4042-a0ea-ef22522833e4",
                            "version_id": "qkTpB7j"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-380b81d3-276b-4042-a0ea-ef22522833e4",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-380b81d3-276b-4042-a0ea-ef22522833e4",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "urllib3",
                            "semver_range": ">=1.25.4, <1.26.5"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 14,
                            "lockfile_path": "requirements.txt",
                            "package": "urllib3",
                            "transitivity": "unknown",
                            "version": "1.25.9"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": true,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "ERROR"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 14,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-315656f548f484e70e8315798d3ce2cdb6425304",
            "end": {
                "col": 1,
                "line": 14,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "82fc930565b50fa74b65876f067199ebc41f5d46986e6e2ae2da3b78f41cbf0d3ce408358b31eb1a60cc18a57b0159c82382f65ecfce7415776c487111420a28_0",
                "is_ignored": false,
                "lines": "urllib3==1.25.9",
                "message": "Affected versions of urllib3 are vulnerable to Incorrect Resource Transfer Between Spheres.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2024-37891",
                    "cwe": [
                        "CWE-669: Incorrect Resource Transfer Between Spheres"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-34jh-p97f-mpxf",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2024-06-17T21:37:20Z",
                    "references": [
                        "https://github.com/advisories/GHSA-34jh-p97f-mpxf",
                        "https://nvd.nist.gov/vuln/detail/CVE-2024-37891"
                    ],
                    "sca-fix-versions": [
                        {
                            "urllib3": "2.2.2"
                        },
                        {
                            "urllib3": "1.26.19"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "MODERATE",
                    "sca-vuln-database-identifier": "CVE-2024-37891",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 137382,
                            "rule_id": "9AUd9K4",
                            "rule_name": "ssc-parity-315656f548f484e70e8315798d3ce2cdb6425304",
                            "rv_id": 880460,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-315656f548f484e70e8315798d3ce2cdb6425304",
                            "version_id": "PkTjRrn"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-315656f548f484e70e8315798d3ce2cdb6425304",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-315656f548f484e70e8315798d3ce2cdb6425304",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "urllib3",
                            "semver_range": "<1.26.19"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 14,
                            "lockfile_path": "requirements.txt",
                            "package": "urllib3",
                            "transitivity": "unknown",
                            "version": "1.25.9"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 14,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-a4836118ede97984c75d9cc7c558ac5d5a54093a",
            "end": {
                "col": 1,
                "line": 14,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7401b8259ae0fea76da2e9101d97cf40bf34b00a941bfba97bf916c0143429c9ce75ffa832bdc1dc6408a4821558c97a09770490efc8524e80f1486c0b2cd739_0",
                "is_ignored": false,
                "lines": "urllib3==1.25.9",
                "message": "Affected versions of urllib3 are vulnerable to Exposure of Sensitive Information to an Unauthorized Actor.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2023-45803",
                    "cwe": [
                        "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-g4mx-q9vg-27p4",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A01:2021 - Broken Access Control",
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2023-10-17T20:15:25Z",
                    "references": [
                        "https://github.com/advisories/GHSA-g4mx-q9vg-27p4",
                        "https://nvd.nist.gov/vuln/detail/CVE-2023-45803"
                    ],
                    "sca-fix-versions": [
                        {
                            "urllib3": "2.0.7"
                        },
                        {
                            "urllib3": "1.26.18"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "MODERATE",
                    "sca-vuln-database-identifier": "CVE-2023-45803",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 110873,
                            "rule_id": "v8UY8GR",
                            "rule_name": "ssc-parity-a4836118ede97984c75d9cc7c558ac5d5a54093a",
                            "rv_id": 889454,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-a4836118ede97984c75d9cc7c558ac5d5a54093a",
                            "version_id": "A8TNLp4"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-a4836118ede97984c75d9cc7c558ac5d5a54093a",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-a4836118ede97984c75d9cc7c558ac5d5a54093a",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Mishandled Sensitive Information"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "urllib3",
                            "semver_range": "<1.26.18"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 14,
                            "lockfile_path": "requirements.txt",
                            "package": "urllib3",
                            "transitivity": "unknown",
                            "version": "1.25.9"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 14,
                "offset": 1
            }
        },
        {
            "check_id": "ssc-parity-e01ec173ff917ffa506cfc44576f622ee3b4fb07",
            "end": {
                "col": 1,
                "line": 14,
                "offset": 1
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7282879cb3f5fb6ad785512bb18d982c1ae220c2715b7738900328ad84c81d660059c5bba7da62d140cb8c8dada64c41462a6b88c568a8c283385d9347d9b106_0",
                "is_ignored": false,
                "lines": "urllib3==1.25.9",
                "message": "Affected versions of urllib3 are vulnerable to Exposure of Sensitive Information to an Unauthorized Actor.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cve": "CVE-2023-43804",
                    "cwe": [
                        "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"
                    ],
                    "dev.semgrep.actions": [],
                    "ghsa": "GHSA-v845-jxx5-vc9f",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "owasp": [
                        "A01:2021 - Broken Access Control",
                        "A06:2021 - Vulnerable and Outdated Components"
                    ],
                    "publish-date": "2023-10-02T23:27:05Z",
                    "references": [
                        "https://github.com/advisories/GHSA-v845-jxx5-vc9f",
                        "https://nvd.nist.gov/vuln/detail/CVE-2023-43804"
                    ],
                    "sca-fix-versions": [
                        {
                            "urllib3": "2.0.6"
                        },
                        {
                            "urllib3": "1.26.17"
                        }
                    ],
                    "sca-kind": "legacy",
                    "sca-schema": 20230302,
                    "sca-severity": "MODERATE",
                    "sca-vuln-database-identifier": "CVE-2023-43804",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "custom",
                            "r_id": 110933,
                            "rule_id": "nJUxooy",
                            "rule_name": "ssc-parity-e01ec173ff917ffa506cfc44576f622ee3b4fb07",
                            "rv_id": 896453,
                            "url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e01ec173ff917ffa506cfc44576f622ee3b4fb07",
                            "version_id": "nWTn5x7"
                        },
                        "src": "unchanged"
                    },
                    "semgrep.url": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e01ec173ff917ffa506cfc44576f622ee3b4fb07",
                    "source": "https://semgrep.dev/orgs/-/supply-chain/advisories?q=ssc-parity-e01ec173ff917ffa506cfc44576f622ee3b4fb07",
                    "technology": [
                        "python"
                    ],
                    "vulnerability_class": [
                        "Mishandled Sensitive Information"
                    ]
                },
                "metavars": {},
                "sca_info": {
                    "dependency_match": {
                        "dependency_pattern": {
                            "ecosystem": "pypi",
                            "package": "urllib3",
                            "semver_range": "<1.26.17"
                        },
                        "found_dependency": {
                            "allowed_hashes": {},
                            "ecosystem": "pypi",
                            "line_number": 14,
                            "lockfile_path": "requirements.txt",
                            "package": "urllib3",
                            "transitivity": "unknown",
                            "version": "1.25.9"
                        },
                        "lockfile": "requirements.txt"
                    },
                    "reachability_rule": false,
                    "reachable": false,
                    "sca_finding_schema": 20220913
                },
                "severity": "WARNING"
            },
            "path": "requirements.txt",
            "start": {
                "col": 1,
                "line": 14,
                "offset": 1
            }
        }
    ],
    "skipped_rules": [],
    "version": "1.95.0"
}